{"version":3,"file":"static/js/6530.76645308.chunk.js","mappings":"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","sources":["components/Users/FetchAddress.js","components/Users/UserAddress.jsx"],"sourcesContent":["\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\nimport { FiEdit, FiTrash2 } from 'react-icons/fi';\r\nimport Modal from 'react-modal';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport Swal from 'sweetalert2';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction ShippingAddressPage() {\r\n    const userState = useSelector((state) => state.loginUserReducer);\r\n    const { currentUser } = userState;\r\n    const [addresses, setAddresses] = useState([]);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [selectedAddress, setSelectedAddress] = useState(null);\r\n    const history = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const userId = currentUser._id;\r\n        axios\r\n            .get(`/api/users/addresses/${userId}`)\r\n            .then((response) => {\r\n                setAddresses(response.data);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error fetching addresses:', error);\r\n            });\r\n    }, []);\r\n\r\n    const handleUpdateAddress = (addressId) => {\r\n        // Find the selected address from the addresses array\r\n        const addressToUpdate = addresses.find((address) => address._id === addressId);\r\n\r\n        // Set the selected address and open the modal\r\n        setSelectedAddress(addressToUpdate);\r\n        setShowModal(true);\r\n    };\r\n\r\n    const handleDeleteAddress = (addressId) => {\r\n        Swal.fire({\r\n            title: 'Delete Address',\r\n            text: 'Are you sure you want to delete this address?',\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Delete',\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                axios\r\n                    .delete(`/api/users/addresses/${addressId}`)\r\n                    .then((response) => {\r\n                        setAddresses((prevAddresses) =>\r\n                            prevAddresses.filter((address) => address._id !== addressId)\r\n                        );\r\n                        Swal.fire('Deleted!', 'The address has been deleted.', 'success');\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error deleting address:', error);\r\n                        Swal.fire('Error', 'An error occurred while deleting the address.', 'error');\r\n                    });\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        setShowModal(false);\r\n        setSelectedAddress(null);\r\n    };\r\n\r\n    const handleAddressUpdate = () => {\r\n        const updatedAddressData = {\r\n          street: selectedAddress.street,\r\n          city: selectedAddress.city,\r\n          state: selectedAddress.state,\r\n          zipCode: selectedAddress.zipCode,\r\n          phoneNumber: selectedAddress.phoneNumber,\r\n        };\r\n      \r\n        axios\r\n          .put(`/api/users/addresses/${selectedAddress._id}`, updatedAddressData)\r\n          .then((response) => {\r\n            setAddresses((prevAddresses) =>\r\n              prevAddresses.map((address) =>\r\n                address._id === response.data._id ? response.data : address\r\n              )\r\n            );\r\n            setShowModal(false);\r\n            // Check if the address was successfully updated\r\n            if (response.status === 200) {\r\n              toast.success('Address Updated successfully', {\r\n                position: 'top-right',\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: 'light',\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error updating address:', error);\r\n          });\r\n      };\r\n      \r\n    const customModalStyles = {\r\n        content: {\r\n            top: '50%',\r\n            left: '50%',\r\n            right: 'auto',\r\n            bottom: 'auto',\r\n            transform: 'translate(-50%, -50%)',\r\n            backgroundColor: 'white',\r\n            borderRadius: '8px',\r\n            boxShadow: '0px 4px 12px rgba(0, 0, 0, 0.1)',\r\n            padding: '12px',\r\n            maxWidth: '600px',\r\n        },\r\n        overlay: {\r\n            backgroundColor: 'rgba(0, 0, 0,0.4)',\r\n            backdropFilter: 'blur(8px)',\r\n            zIndex: '9999',\r\n        },\r\n    };\r\n    return (\r\n        <div className=\"container mx-auto mt-8 max-w-md\">\r\n            <h2 className=\"text-2xl font-bold mb-4\">Shipping Addresses</h2>\r\n            {addresses.length === 0 ? (\r\n                <p>No addresses found.</p>\r\n            ) : (\r\n                <ul>\r\n                    {addresses.map((address) => (\r\n                        <li key={address._id} className=\"mb-4 p-4 border rounded-md\">\r\n                            <p className=\"text-base\">\r\n                                <span className=\"font-bold\">Street:</span> {address.street}\r\n                            </p>\r\n                            <p className=\"text-base\">\r\n                                <span className=\"font-bold\">City:</span> {address.city}\r\n                            </p>\r\n                            <p className=\"text-base\">\r\n                                <span className=\"font-bold\">State:</span> {address.state}\r\n                            </p>\r\n                            <p className=\"text-base\">\r\n                                <span className=\"font-bold\">ZIP Code:</span> {address.zipCode}\r\n                            </p>\r\n                            <p className=\"text-base\">\r\n                                <span className=\"font-bold\">Phone Number:</span> {address.phoneNumber}\r\n                            </p>\r\n\r\n                            <div className=\"flex justify-end mt-2\">\r\n                                <button\r\n                                    className=\"flex items-center px-2 py-1 mr-2 text-gray-500 hover:text-gray-700\"\r\n                                    onClick={() => handleUpdateAddress(address._id)}\r\n                                >\r\n                                    <FiEdit className=\"mr-1\" />\r\n                                    Update\r\n                                </button>\r\n                                <button\r\n                                    className=\"flex items-center px-2 py-1 text-red-500 hover:text-red-700\"\r\n                                    onClick={() => handleDeleteAddress(address._id)}\r\n                                >\r\n                                    <FiTrash2 className=\"mr-1\" />\r\n                                    Delete\r\n                                </button>\r\n                            </div>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n\r\n            {/* Modal */}\r\n            <Modal\r\n                isOpen={showModal}\r\n                onRequestClose={handleCloseModal}\r\n                contentLabel=\"Update Address\"\r\n                style={customModalStyles}\r\n            >\r\n                {selectedAddress && (\r\n                    <>\r\n                        <div className=\"flex justify-center items-center\">\r\n                            <h2 className=\"text-xl font-bold mb-4 text-center\">\r\n                                Update Address\r\n                            </h2>\r\n                            <button\r\n                                onClick={handleCloseModal}\r\n                                className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded inline-flex items-center ml-9 mb-3\"\r\n                            >\r\n                                <FontAwesomeIcon icon={faTimes} className=\"mr-2\" />\r\n\r\n                            </button>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"px-6 py-6 lg:px-8\">\r\n\r\n                            <form className=\"space-y-6\" action=\"#\">\r\n                                <div>\r\n                                    <label\r\n                                        htmlFor=\"Street\"\r\n                                        className=\"block mb-2 text-sm font-medium text-gray-900 \"\r\n                                    >\r\n                                        Your Street\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={selectedAddress.street}\r\n                                        onChange={(e) =>\r\n                                            setSelectedAddress((prevAddress) => ({\r\n                                                ...prevAddress,\r\n                                                street: e.target.value,\r\n                                            }))\r\n                                        }\r\n                                        className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 \"\r\n                                        placeholder=\"name@company.com\"\r\n                                        required=\"\"\r\n                                    />\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label\r\n                                        htmlFor=\"email\"\r\n                                        className=\"block mb-2 text-sm font-medium text-gray-900 \"\r\n                                    >\r\n                                        Your city\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={selectedAddress.city}\r\n                                        onChange={(e) =>\r\n                                            setSelectedAddress((prevAddress) => ({\r\n                                                ...prevAddress,\r\n                                                city: e.target.value,\r\n                                            }))\r\n                                        }\r\n                                        className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 \"\r\n                                    />\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label\r\n                                        htmlFor=\"email\"\r\n                                        className=\"block mb-2 text-sm font-medium text-gray-900 \"\r\n                                    >\r\n                                        Your State\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={selectedAddress.state}\r\n                                        onChange={(e) =>\r\n                                            setSelectedAddress((prevAddress) => ({\r\n                                                ...prevAddress,\r\n                                                state: e.target.value,\r\n                                            }))\r\n                                        }\r\n                                        className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 \"\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n                                <div>\r\n                                    <label\r\n                                        htmlFor=\"email\"\r\n                                        className=\"block mb-2 text-sm font-medium text-gray-900 \"\r\n                                    >\r\n                                        Your ZipCode\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={selectedAddress.zipCode}\r\n                                        onChange={(e) =>\r\n                                            setSelectedAddress((prevAddress) => ({\r\n                                                ...prevAddress,\r\n                                                zipCode: e.target.value,\r\n                                            }))\r\n                                        }\r\n                                        className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 \"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <label\r\n                                        htmlFor=\"email\"\r\n                                        className=\"block mb-2 text-sm font-medium text-gray-900 \"\r\n                                    >\r\n                                        Your phoneNumber\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={selectedAddress.phoneNumber}\r\n                                        onChange={(e) =>\r\n                                            setSelectedAddress((prevAddress) => ({\r\n                                                ...prevAddress,\r\n                                                phoneNumber: e.target.value,\r\n                                            }))\r\n                                        }\r\n                                        className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 \"\r\n                                    />\r\n                                </div>\r\n\r\n\r\n                                <button\r\n                                    onClick={handleAddressUpdate}\r\n                                    className=\"w-full text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center \"\r\n                                >\r\n                                    update address\r\n                                </button>\r\n\r\n                            </form>\r\n                        </div>\r\n\r\n\r\n                    </>\r\n                )}\r\n            </Modal>\r\n            <ToastContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ShippingAddressPage;\r\n\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport AddressList from './FetchAddress';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction ShippingAddressPage() {\r\n  const userState = useSelector((state) => state.loginUserReducer);\r\n  const {  currentUser } = userState;\r\n  const [shippingAddress, setShippingAddress] = useState({\r\n    street: '',\r\n    city: '',\r\n    state: '',\r\n    zipCode: '',\r\n    phoneNumber: ''\r\n  });\r\n  const userId = currentUser._id;\r\n\r\n  const API_URL = process.env.NODE_ENV === 'production' ? 'https://pizzaking.onrender.com/api/users/address' : 'http://localhost:8080/api/users/address';\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setShippingAddress((prevAddress) => ({\r\n      ...prevAddress,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  \r\n    // Send the shipping address to the backend API\r\n    axios.post(API_URL, { ...shippingAddress, user: userId })\r\n      .then(() => {\r\n        console.log('Shipping address saved successfully');\r\n        // Reset the form fields\r\n        setShippingAddress({\r\n          street: '',\r\n          city: '',\r\n          state: '',\r\n          zipCode: '',\r\n          phoneNumber: '',\r\n          user:currentUser,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error saving shipping address:', error);\r\n      });\r\n  };\r\n\r\n  \r\n  // console.log(currentUser._id)\r\n\r\n  \r\n  return (\r\n    \r\n    <div className=\"container mx-auto mt-8 max-w-md\">\r\n\r\n      <h2 className=\"text-2xl font-bold mb-4\">New Shipping Address</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Input fields for shipping address */}\r\n        <label htmlFor=\"street\">Street:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"street\"\r\n          name=\"street\"\r\n          className=\"w-full border-gray-300 border p-2 mb-4\"\r\n          value={shippingAddress.street}\r\n          onChange={handleInputChange}\r\n        />\r\n\r\n        <label htmlFor=\"city\">City:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"city\"\r\n          name=\"city\"\r\n          className=\"w-full border-gray-300 border p-2 mb-4\"\r\n          value={shippingAddress.city}\r\n          onChange={handleInputChange}\r\n        />\r\n\r\n        <label htmlFor=\"state\">State:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"state\"\r\n          name=\"state\"\r\n          className=\"w-full border-gray-300 border p-2 mb-4\"\r\n          value={shippingAddress.state}\r\n          onChange={handleInputChange}\r\n        />\r\n\r\n        <label htmlFor=\"zipCode\">ZIP Code:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"zipCode\"\r\n          name=\"zipCode\"\r\n          className=\"w-full border-gray-300 border p-2 mb-4\"\r\n          value={shippingAddress.zipCode}\r\n          onChange={handleInputChange}\r\n        />\r\n        <label htmlFor=\"phoneNumber\">Phone Number:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"phoneNumber\"\r\n          name=\"phoneNumber\"\r\n          className=\"w-full border-gray-300 border p-2 mb-4\"\r\n          value={shippingAddress.phoneNumber}\r\n          onChange={handleInputChange}\r\n        />\r\n\r\n        {/* Submit button */}\r\n        <button type=\"submit\" className=\"bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded\">\r\n          Save\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShippingAddressPage;\r\n"],"names":["currentUser","useSelector","state","loginUserReducer","useState","addresses","setAddresses","showModal","setShowModal","selectedAddress","setSelectedAddress","useNavigate","useEffect","userId","_id","axios","then","response","data","catch","error","console","handleCloseModal","className","length","map","address","street","city","zipCode","phoneNumber","onClick","addressId","addressToUpdate","find","handleUpdateAddress","Swal","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","prevAddresses","filter","isOpen","onRequestClose","contentLabel","style","content","top","left","right","bottom","transform","backgroundColor","borderRadius","boxShadow","padding","maxWidth","overlay","backdropFilter","zIndex","faTimes","action","htmlFor","type","value","onChange","e","prevAddress","target","placeholder","required","updatedAddressData","status","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","shippingAddress","setShippingAddress","handleInputChange","name","onSubmit","preventDefault","user","log","id"],"sourceRoot":""}