{"version":3,"file":"static/js/5822.9bdae3b3.chunk.js","mappings":"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","sources":["screen/Login/Login.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './Login.css'\r\nimport { Helmet } from \"react-helmet\";\r\nimport { MdVisibility, MdVisibilityOff } from 'react-icons/md';\r\nimport { SiAuth0 } from 'react-icons/si';\r\nimport { FiLoader } from 'react-icons/fi';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport axios from \"axios\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst Login = () => {\r\n  const { loginWithRedirect } = useAuth0();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isChecked, setIsChecked] = useState(false);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const handleCheckboxChange = (event) => {\r\n    setIsChecked(event.target.checked);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"currentUser\")) {\r\n      window.location.href = \"/\";\r\n    }\r\n  }, []);\r\n\r\n\r\n\r\n  const loginHandler = async (event) => {\r\n    event.preventDefault(); // Prevent form submission\r\n    if (!isChecked) {\r\n      return toast.warn(\"Please agree to the checkbox\");\r\n    }\r\n    setLoading(true);\r\n    const user = { email, password };\r\n    const apiUrl =\r\n      process.env.NODE_ENV === \"production\"\r\n        ? \"https://pizzaking.onrender.com/api/users/login\"\r\n        : \"http://localhost:8080/api/users/login\";\r\n    try {\r\n      const response = await axios.post(apiUrl, user);\r\n  \r\n      if (response.status === 200) {\r\n        setLoading(false);\r\n        localStorage.setItem(\"currentUser\", JSON.stringify(response.data));\r\n        const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n        toast.success(`Welcome Back ${currentUser.name}`, {\r\n          position: 'top-right',\r\n          toastId: 'welcome-toast',\r\n          className: 'welcome-toast',\r\n          bodyClassName: 'welcome-toast-body',\r\n          progressClassName: 'welcome-toast-progress',\r\n          closeButton: false,\r\n          autoClose: 3000,\r\n          hideProgressBar: true,\r\n        });\r\n       \r\n       setTimeout(() => {\r\n        window.location.href = \"/\";\r\n       }, 1500);\r\n      } else {\r\n        toast.error(\"Login not successful!\");\r\n      }\r\n    } catch (error) {\r\n      if (error.response) {\r\n        setLoading(false);\r\n        if (error.response.status === 400) {\r\n          const { message } = error.response.data;\r\n          toast.error(message);\r\n        } else if (error.response.status === 429) {\r\n          toast.error(\"Too many login attempts, please try again after 1 min.\");\r\n        } else {\r\n          toast.error(\"An error occurred during login\");\r\n        }\r\n      } else {\r\n        toast.error(\"Network Error\");\r\n      }\r\n    }\r\n  };\r\n  \r\n\r\n\r\n  // Show hide password dialog\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const toggleShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>Login</title>\r\n      </Helmet>\r\n      <div className=\"flex justify-center items-centerw-full lg:w-1/2 xl:w-2/5 px-4 mb-16 lg:mb-0 mx-auto  items-center\">\r\n        <div className=\" lg:py-20 mx-auto lg:mr-0\">\r\n          <h3 className=\"font-heading text-4xl text-gray-900 font-semibold mb-4\">\r\n            Sign in to your account\r\n          </h3>\r\n          <p className=\"text-lg text-gray-500 mb-10\">\r\n            Greetings on your return! We kindly request you to enter your details.\r\n          </p>\r\n          <div className=\"w-full md:w-1/2 px-2 mb-3 md:mb-0 flex items-center justify-end ml-24\">\r\n            <button\r\n              onClick={() => loginWithRedirect()}\r\n              className=\"inline-flex items-center justify-center px-6 py-3 border border-transparent rounded-full shadow-sm text-base font-medium text-white bg-gradient-to-r from-blue-500 to-indigo-600 hover:from-blue-600 hover:to-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 ml-auto\"\r\n            >\r\n              <SiAuth0 className=\"mr-2\" />\r\n              <span className=\"text-sm font-semibold text-gray-100\">Login with Auth</span>\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"flex mb-6 items-center\">\r\n            <div className=\"w-full h-px bg-gray-300\" />\r\n            <span className=\"mx-4 text-sm font-semibold text-gray-500\">\r\n              Or\r\n            </span>\r\n            <div className=\"w-full h-px bg-gray-300\" />\r\n          </div>\r\n          <form onSubmit={loginHandler}>\r\n            <div className=\"mb-6\">\r\n              <label\r\n                className=\"block mb-1.5 text-sm text-gray-900 font-semibold\"\r\n                htmlFor=\"\"\r\n              >\r\n                Email\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                className=\"w-full py-3 px-4 text-sm text-gray-900 placeholder-gray-400 border border-gray-200 focus:border-purple-500 focus:outline-purple rounded-lg\"\r\n                placeholder=\"contact@pizzaking.com\"\r\n              />\r\n            </div>\r\n            <div className=\"mb-7\">\r\n              <div className=\"flex mb-1.5 items-center justify-between\">\r\n                <label\r\n                  className=\"block text-sm text-gray-900 font-semibold\"\r\n                  htmlFor=\"\"\r\n                >\r\n                  Password\r\n                </label>\r\n                <Link\r\n                  to=\"/forgot_password\"\r\n                  className=\"inline-block text-xs font-semibold text-orange-900 hover:text-gray-900\"\r\n                >\r\n                  Forget password?\r\n                </Link>\r\n              </div>\r\n              <div className=\"relative\">\r\n                <input\r\n                  id=\"password\"\r\n                  type={showPassword ? 'text' : 'password'}\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  className=\"w-full py-3 px-4 text-sm text-gray-900 placeholder-gray-400 border border-gray-200 focus:border-purple-500 focus:outline-purple rounded-lg\"\r\n                  placeholder=\"Enter your password\"\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={toggleShowPassword}\r\n                  className=\"absolute top-1/2 right-0 transform -translate-y-1/2 mr-3 focus:outline-none\"\r\n                >\r\n                  {showPassword ? <MdVisibilityOff /> : <MdVisibility />}\r\n                </button>\r\n              </div>\r\n              <small className=\"block text-center text-gray-500 text-sm mt-2\">\r\n                We'll never share your credential details with anyone else.\r\n              </small>\r\n            </div>\r\n            <div className=\"flex items-center justify-center mb-2\">\r\n              <input\r\n                type=\"checkbox\"\r\n                defaultValue=\"\"\r\n                id=\"\"\r\n                className=\"mb-2\"\r\n                checked={isChecked}\r\n                onChange={handleCheckboxChange}\r\n              />\r\n              <label className=\"ml-2 text-xs text-gray-800 mb-3\" htmlFor=\"\">\r\n                <button>agree to T&C </button>\r\n              </label>\r\n            </div>\r\n\r\n            {isLoading ? (\r\n               <div className=\"flex items-center justify-center mb-6\">\r\n               <FiLoader className=\"animate-spin text-4xl mr-2 text-blue-500\" />\r\n               <span className=\"text-lg font-semibold text-blue-500\">Sending Req...</span>\r\n             </div>\r\n\r\n            ) : (\r\n              <button\r\n                className=\"relative group block w-full mb-6 py-3 px-5 text-center text-sm font-semibold text-orange-50 bg-orange-900 rounded-full overflow-hidden\"\r\n                type=\"submit\"\r\n              >\r\n                Login\r\n              </button>\r\n            )}\r\n            <span className=\"text-xs font-semibold text-gray-900\">\r\n              <span>Don’t have an account?</span>\r\n              <Link\r\n                to=\"/register\"\r\n                className=\"ml-1 inline-block text-orange-900 hover:text-orange-700\"\r\n              >\r\n                Sign up\r\n              </Link>\r\n            </span>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      \r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={3000}\r\n        hideProgressBar\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["loginWithRedirect","useAuth0","useState","email","setEmail","password","setPassword","isChecked","setIsChecked","isLoading","setLoading","useEffect","localStorage","getItem","window","location","href","loginHandler","event","preventDefault","toast","user","axios","response","status","setItem","JSON","stringify","data","currentUser","parse","name","position","toastId","className","bodyClassName","progressClassName","closeButton","autoClose","hideProgressBar","setTimeout","message","showPassword","setShowPassword","Helmet","onClick","onSubmit","htmlFor","type","value","onChange","e","target","placeholder","to","id","defaultValue","checked","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover"],"sourceRoot":""}