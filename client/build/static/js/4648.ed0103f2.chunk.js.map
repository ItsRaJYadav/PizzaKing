{"version":3,"file":"static/js/4648.ed0103f2.chunk.js","mappings":"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","sources":["Admin/OrderList.jsx","Alerts/Error.jsx","Alerts/Loader.js","action/orderAction.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deliverOrder, getAllOrders, cancelOrder } from \"../action/orderAction\";\r\nimport Loader from \"../Alerts/Loader\";\r\nimport Error from \"../Alerts/Error\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Link, Outlet } from \"react-router-dom\";\r\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\r\n\r\n\r\nconst OrderList = () => {\r\n  const [activeLink, setActiveLink] = useState('');\r\n\r\n  const allOrdersState = useSelector((state) => state.allUserOrdersReducer);\r\n  const { loading, orders, error } = allOrdersState;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllOrders());\r\n  }, [dispatch]);\r\n\r\n  const handleOrderDeliver = (orderId) => {\r\n    Swal.fire({\r\n      title: \"Deliver Order\",\r\n      text: \"Are you sure you want to deliver this order?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: \"Yes, deliver it!\",\r\n      cancelButtonText: \"Cancel\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        dispatch(deliverOrder(orderId));\r\n        Swal.fire(\"Delivered!\", \"The order has been delivered.\", \"success\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleCancelOrder = (orderId) => {\r\n    Swal.fire({\r\n      title: \"Cancel Order\",\r\n      text: \"Are you sure you want to cancel this order?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: \"Yes, cancel it!\",\r\n      cancelButtonText: \"Cancel\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        dispatch(cancelOrder(orderId));\r\n        Swal.fire(\"Cancelled!\", \"The order has been cancelled.\", \"success\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading && <Loader />}\r\n      {error && <Error error=\"Admin Order request failed\" />}\r\n      <div className=\"overflow-x-auto\">\r\n        <table className=\"w-full bg-white shadow-md rounded\">\r\n          <thead>\r\n            <tr className=\"bg-gray-200 text-gray-700 uppercase text-sm leading-normal\">\r\n              <th className=\"py-3 px-4 text-left\">Order Id</th>\r\n              <th className=\"py-3 px-4 text-left\">Email</th>\r\n              <th className=\"py-3 px-4 text-left\">Customer</th>\r\n              <th className=\"py-3 px-4 text-left\">Amount</th>\r\n              <th className=\"py-3 px-4 text-left\">Date</th>\r\n              <th className=\"py-3 px-4 text-left\">Status</th>\r\n              <th className=\"py-3 px-4 text-left\">Order Items</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders &&\r\n              orders.map((order) => (\r\n                <tr key={order._id} className=\"border-b border-gray-200 hover:bg-gray-100\">\r\n                  <td className=\"py-4 px-6\">\r\n                    <Link to={`/admin/orderlist/${order._id}`}>{order._id}</Link>\r\n                  </td>\r\n                  <td className=\"py-4 px-6\">{order.email}</td>\r\n                  <td className=\"py-4 px-6\">{order.name}</td>\r\n                  <td className=\"py-4 px-6\">Rs {order.orderAmount}/-</td>\r\n                  <td className=\"py-4 px-6\">{order.createdAt.substring(0, 10)}</td>\r\n                  <td className=\"py-4 px-6\">\r\n                    {order.isCanceled ? (\r\n                      <h6 className=\"text-red-500\">Cancelled</h6>\r\n                    ) : (\r\n                      <>\r\n                        {!order.isDelivered ? (\r\n                          <button\r\n                            className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\"\r\n                            onClick={() => handleOrderDeliver(order._id)}\r\n                          >\r\n                            Deliver\r\n                          </button>\r\n                        ) : (\r\n                          <h6 className=\"text-green-500\">Delivered</h6>\r\n                        )}\r\n                        {!order.isDelivered && (\r\n                          <button\r\n                            className={`flex items-center justify-center py-3 px-6 rounded-lg text-gray-700 hover:bg-gray-300 ${activeLink === 'cancelorder' ? 'bg-gray-300 text-gray-800 font-semibold' : ''\r\n                              }`}\r\n                            disabled={order.isCanceled}\r\n                            onClick={() => handleCancelOrder(order._id)}\r\n                          >\r\n                            <AiOutlineCloseCircle className=\"mr-2\" />\r\n                            <span>Cancel Order</span>\r\n                          </button>\r\n                        )}\r\n                      </>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"py-4 px-6\">\r\n                    <ol className=\"list-decimal list-inside\">\r\n                      {order.orderItems.map((item, index) => (\r\n                        <li key={item._id} className=\"mb-2 flex items-center\">\r\n                          <span className=\"font-bold\">{index + 1}.</span>\r\n                          <span className=\"ml-2 font-bold\">{item.name}</span> -\r\n                          <span className={`ml-2 mr-1 bg-${item.quantity > 2 ? 'green' : 'yellow'}-200 px-2 rounded`}>\r\n                            {item.quantity}\r\n                          </span> {item.varient}\r\n                        </li>\r\n                      ))}\r\n                    </ol>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"flex-1 bg-white p-8\">\r\n        <Outlet />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderList;\r\n","import React from \"react\";\r\n\r\nconst Error = ({ error }) => {\r\n  return (\r\n    <div className=\"bg-red-100 border border-red-500 text-red-700 px-4 py-3 rounded relative\">\r\n      <span className=\"block sm:inline\">{error}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React from \"react\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"flex items-center justify-center\">\r\n      <div className=\"border-t-4 border-b-4 border-blue-500 rounded-full w-12 h-12 animate-spin\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import axios from \"axios\";\r\n\r\nexport const placeOrder = (token, subTotal) => async (dispatch, getState) => {\r\n  dispatch({ type: \"PLACE_ORDER_REQUEST\" });\r\n  const currentUser = getState().loginUserReducer.currentUser;\r\n  const cartItems = getState().cartReducer.cartItems;\r\n  try {\r\n    await axios.post(\"/api/orders/placeorder\", {\r\n      token,\r\n      subTotal,\r\n      currentUser,\r\n      cartItems,\r\n    });\r\n    dispatch({ type: \"PLACE_ORDER_SUCCESS\" });\r\n    // console.log(res);\r\n  } catch (error) {\r\n    dispatch({ type: \"PLACE_ORDER_FAIL\" });\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getUserOrders = () => async (dispatch, getState) => {\r\n  const currentUser = getState().loginUserReducer.currentUser;\r\n  dispatch({\r\n    type: \"USER_ORDER_REQUEST\",\r\n  });\r\n  try {\r\n    const response = await axios.post(\"/api/orders/getuserorder\", {\r\n      email: currentUser.email,\r\n    });\r\n    // console.log(response);\r\n    dispatch({ type: \"USER_ORDER_SUCCESS\", payload: response.data });\r\n  } catch (error) {\r\n    dispatch({ type: \"USER_ORDER_FAIL\", payload: error });\r\n  }\r\n};\r\nexport const getAllOrders = () => async (dispatch, getState) => {\r\n  // const currentUser = getState().loginUserReducer.currentUser;\r\n  dispatch({\r\n    type: \"ALL_ORDER_REQUEST\",\r\n  });\r\n  try {\r\n    const response = await axios.get(\"/api/orders/alluserorder\");\r\n    dispatch({ type: \"ALL_ORDER_SUCCESS\", payload: response.data });\r\n  } catch (error) {\r\n    dispatch({ type: \"ALL_ORDER_FAIL\", payload: error });\r\n  }\r\n};\r\n\r\nexport const deliverOrder = (orderid) => async (dispatch, getState) => {\r\n  // const currentUser = getState().loginUserReducer.currentUser;\r\n  dispatch({\r\n    type: \"GET_ALL_ORDER_REQUEST\",\r\n  });\r\n  try {\r\n    await axios.post(\"/api/orders/deliverorder\", { orderid });\r\n    // alert(\"Deliverd Success\");\r\n    const orders = await axios.get(\"/api/orders/alluserorder\");\r\n    dispatch({ type: \"GET_ALL_ORDER_SUCCESS\", payload: orders.data });\r\n    window.location.href = \"/admin/orderlist\";\r\n  } catch (error) {\r\n    dispatch({ type: \"GET_ALL_ORDER_FAIL\", payload: error });\r\n  }\r\n};\r\n\r\n\r\nexport const cancelOrder = (orderid) => async (dispatch, getState) => {\r\n  // const currentUser = getState().loginUserReducer.currentUser;\r\n  dispatch({\r\n    type: \"GET_ALL_ORDER_REQUEST\",\r\n  });\r\n  try {\r\n    await axios.post(\"/api/orders/canceOrder\", { orderid });\r\n    // alert(\"Deliverd Success\");\r\n    const orders = await axios.get(\"/api/orders/alluserorder\");\r\n    dispatch({ type: \"GET_ALL_ORDER_SUCCESS\", payload: orders.data });\r\n    window.location.href = \"/admin/orderlist\";\r\n  } catch (error) {\r\n    dispatch({ type: \"GET_ALL_ORDER_FAIL\", payload: error });\r\n  }\r\n};\r\n\r\n"],"names":["useState","activeLink","allOrdersState","useSelector","state","allUserOrdersReducer","loading","orders","error","dispatch","useDispatch","useEffect","getAllOrders","className","map","order","to","_id","email","name","orderAmount","createdAt","substring","isCanceled","isDelivered","onClick","orderId","Swal","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","then","result","isConfirmed","deliverOrder","disabled","cancelOrder","orderItems","item","index","quantity","varient","getUserOrders","getState","currentUser","loginUserReducer","type","axios","response","payload","data","orderid","window","location","href"],"sourceRoot":""}