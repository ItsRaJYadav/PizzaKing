{"version":3,"file":"static/js/714.fa4a3fee.chunk.js","mappings":"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","sources":["Admin/AdminPage.jsx","action/orderAction.js","action/pizzaAction.js","action/userAction.js"],"sourcesContent":["import { useEffect, useRef,useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FiSettings, FiUsers } from 'react-icons/fi';\r\nimport { FaShoppingCart } from 'react-icons/fa';\r\nimport { HiCurrencyRupee } from 'react-icons/hi';\r\nimport { SiProducthunt } from 'react-icons/si';\r\nimport { AiFillMessage } from 'react-icons/ai';\r\n\r\nimport { MdOutlineDeliveryDining } from 'react-icons/md';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllPizzas } from '../action/pizzaAction';\r\nimport { getAllUsers } from '../action/userAction';\r\nimport { getAllOrders } from '../action/orderAction';\r\nimport Chart from 'chart.js/auto';\r\n\r\n\r\n\r\nconst AdminDashboard = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const dispatch = useDispatch();\r\n  const chartInstanceRef = useRef(null);\r\n  const usersChartRef = useRef(null);\r\n  const productsChartRef = useRef(null);\r\n  const ordersChartRef = useRef(null);\r\n  const revenueChartRef = useRef(null);\r\n  const orderStatusChartRef = useRef(null);\r\n  const chartRef = useRef(null);\r\n\r\n\r\n  const pizzastate = useSelector((state) => state.getAllPizzaReducer);\r\n  const { pizzas } = pizzastate;\r\n\r\n  const allOrdersState = useSelector((state) => state.allUserOrdersReducer);\r\n  const { orders } = allOrdersState;\r\n\r\n  const userState = useSelector((state) => state.getAllUsersReducer);\r\n  const { users } = userState;\r\n  \r\n\r\n  \r\n\r\n  useEffect(() => {\r\n   \r\n    dispatch(getAllPizzas());\r\n    dispatch(getAllUsers());\r\n    dispatch(getAllOrders());\r\n  }, [dispatch]);\r\n\r\n  \r\n  useEffect(() => {\r\n    \r\n    if (usersChartRef.current) {\r\n      const ctx = usersChartRef.current.getContext('2d');\r\n      const labels = users.map((user) => `${new Date(user.createdAt).getDate()} ${new Date(user.createdAt).toLocaleString('default', { month: 'long' })}`);\r\n      const data = users.map((user, index) => index + 1);\r\n\r\n      if (!chartInstanceRef.current) {\r\n        chartInstanceRef.current = new Chart(ctx, {\r\n          type: 'line',\r\n          data: {\r\n            labels: labels,\r\n            datasets: [\r\n              {\r\n                label: 'Users',\r\n                data: data,\r\n                backgroundColor: 'rgba(23, 162, 184, 0.5)',\r\n                borderColor: 'rgba(23, 162, 184, 1)',\r\n                borderWidth: 1,\r\n              },\r\n            ],\r\n          },\r\n          options: {\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n            scales: {\r\n              x: {\r\n                display: true,\r\n                title: {\r\n                  display: true,\r\n                  text: 'Date',\r\n                },\r\n              },\r\n              y: {\r\n                display: true,\r\n                title: {\r\n                  display: true,\r\n                  text: 'Users',\r\n                },\r\n                suggestedMin: 0,\r\n                suggestedMax: users.length,\r\n              },\r\n            },\r\n          },\r\n        });\r\n      } else {\r\n        // Update chart data\r\n        chartInstanceRef.current.data.labels = labels;\r\n        chartInstanceRef.current.data.datasets[0].data = data;\r\n        chartInstanceRef.current.update();\r\n      }\r\n    }\r\n  }, [users]);\r\n\r\n\r\n  \r\n  useEffect(() => {\r\n    if (productsChartRef.current && pizzas.length) {\r\n      const ctx = productsChartRef.current.getContext('2d');\r\n\r\n      const categories = pizzas.map((pizza) => pizza.category);\r\n      const uniqueCategories = [...new Set(categories)];\r\n      const categoryCount = uniqueCategories.map((category) =>\r\n        categories.filter((c) => c === category).length\r\n      );\r\n\r\n      // Define an array of colors for the categories\r\n      const colors = [\r\n        'rgba(108, 117, 125, 1.5)',\r\n        'rgba(255, 99, 132, 0.5)',\r\n        'rgba(54, 162, 235, 0.5)',\r\n        'rgba(255, 206, 86, 0.5)',\r\n        // Add more colors if needed\r\n      ];\r\n\r\n      new Chart(ctx, {\r\n        type: 'bar',\r\n        data: {\r\n          labels: uniqueCategories,\r\n          datasets: [\r\n            {\r\n              label: 'Products',\r\n              data: categoryCount,\r\n              backgroundColor: colors.slice(0, uniqueCategories.length), \r\n              borderColor: 'rgba(108, 117, 125, 1)',\r\n              borderWidth: 1,\r\n            },\r\n          ],\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          scales: {\r\n            x: {\r\n              display: true,\r\n              title: {\r\n                display: true,\r\n                text: 'Category',\r\n              },\r\n            },\r\n            y: {\r\n              display: true,\r\n              title: {\r\n                display: true,\r\n                text: 'Products',\r\n              },\r\n              suggestedMin: 0,\r\n              suggestedMax: Math.max(...categoryCount) + 1,\r\n            },\r\n          },\r\n        },\r\n      });\r\n    }\r\n  }, [pizzas]);\r\n  \r\n  useEffect(() => {\r\n    if (ordersChartRef.current && orders.length) {\r\n      const ctx = ordersChartRef.current.getContext('2d');\r\n  \r\n      //it Calculate the count of orders for each day\r\n      const ordersByDay = {};\r\n      orders.forEach((order) => {\r\n        const date = new Date(order.createdAt);\r\n        const day = date.toDateString();\r\n  \r\n        if (ordersByDay[day]) {\r\n          ordersByDay[day] += 1;\r\n        } else {\r\n          ordersByDay[day] = 1;\r\n        }\r\n      });\r\n  \r\n      const labels = Object.keys(ordersByDay);\r\n      const data = Object.values(ordersByDay);\r\n  \r\n      new Chart(ctx, {\r\n        type: 'line',\r\n        data: {\r\n          labels: labels,\r\n          datasets: [\r\n            {\r\n              label: 'Orders',\r\n              data: data,\r\n              backgroundColor: 'rgba(40, 167, 69, 0.5)',\r\n              borderColor: 'rgba(40, 167, 69, 1)',\r\n              borderWidth: 1,\r\n            },\r\n          ],\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          scales: {\r\n            x: {\r\n              display: true,\r\n              title: {\r\n                display: true,\r\n                text: 'Day',\r\n              },\r\n            },\r\n            y: {\r\n              display: true,\r\n              title: {\r\n                display: true,\r\n                text: 'Orders',\r\n              },\r\n              suggestedMin: 0,\r\n              suggestedMax: Math.max(...data) + 1, \r\n            },\r\n          },\r\n        },\r\n      });\r\n    }\r\n  }, [orders]);\r\n  \r\n  \r\n\r\n  useEffect(() => {\r\n    if (revenueChartRef.current && orders.length) {\r\n      const ctx = revenueChartRef.current.getContext('2d');\r\n  \r\n      // Extract the revenue amounts from the orders\r\n      const revenueData = orders.map((order) => order.orderAmount);\r\n  \r\n      new Chart(ctx, {\r\n        type: 'line',\r\n        data: {\r\n          labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May'], \r\n          datasets: [\r\n            {\r\n              label: 'Revenue',\r\n              data: revenueData, \r\n              backgroundColor: 'rgba(40, 167, 69, 0.5)',\r\n              borderColor: 'rgba(40, 167, 69, 1)',\r\n              borderWidth: 1,\r\n            },\r\n          ],\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          scales: {\r\n            x: {\r\n              display: true,\r\n              title: {\r\n                display: true,\r\n                text: 'Month',\r\n              },\r\n            },\r\n            y: {\r\n              display: true,\r\n              title: {\r\n                display: true,\r\n                text: 'Revenue',\r\n              },\r\n              suggestedMin: 0,\r\n              suggestedMax: Math.max(...revenueData) + 1, \r\n            },\r\n          },\r\n        },\r\n      });\r\n    }\r\n  }, [orders]);\r\n  \r\n\r\n  useEffect(() => {\r\n    if (orderStatusChartRef.current && orders.length) {\r\n      const ctx = orderStatusChartRef.current.getContext('2d');\r\n\r\n      const deliveredOrders = orders.filter((order) => order.isDelivered);\r\n      const notDeliveredOrders = orders.filter((order) => !order.isDelivered);\r\n\r\n      const data = {\r\n        labels: ['Delivered', 'Not Delivered'],\r\n        datasets: [\r\n          {\r\n            data: [deliveredOrders.length, notDeliveredOrders.length],\r\n            backgroundColor: ['rgba(40, 167, 69, 0.5)', 'rgba(255, 99, 132, 0.5)'],\r\n            borderColor: ['rgba(40, 167, 69, 1)', 'rgba(255, 99, 132, 1)'],\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      };\r\n\r\n      new Chart(ctx, {\r\n        type: 'doughnut',\r\n        data: data,\r\n        options: {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n        },\r\n      });\r\n    }\r\n  }, [orders]);\r\n\r\n\r\n  //message display\r\n  useEffect(() => {\r\n    const chartCanvas = chartRef.current.getContext('2d');\r\n\r\n    const data = {\r\n      labels: ['Messages', 'Issues Resolved','Pending'],\r\n      datasets: [{\r\n        label: 'Number of Messages',\r\n        data: [150, 75,28],\r\n        backgroundColor: ['#36A2EB', '#FFCE56','#FF3131'],\r\n      }]\r\n    };\r\n\r\n    const options = {\r\n      scales: {\r\n        y: {\r\n          beginAtZero: true,\r\n          max: 200\r\n        }\r\n      }\r\n    };\r\n\r\n    new Chart(chartCanvas, {\r\n      type: 'bar',\r\n      data: data,\r\n      options: options\r\n    });\r\n  }, []);\r\n\r\n  const calculateTotalOrderValue = () => {\r\n    let totalValue = 0;\r\n    orders.forEach((order) => {\r\n      totalValue += Number(order.orderAmount);\r\n    });\r\n    return totalValue.toFixed(2);\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen bg-gray-100\">\r\n      \r\n      <div className=\"flex-1 p-6\">\r\n        <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-3\">\r\n          <div className=\"p-6 bg-white border rounded-md shadow-md hover:shadow-lg transition-shadow duration-500 ease-in-out\">\r\n            <Link to=\"/admin/users\" className=\"flex items-center justify-between\">\r\n              <div>\r\n                <h3 className=\"mb-2 text-lg font-bold text-gray-800\">Users</h3>\r\n                <p className=\"text-gray-600\">Total Users: {users.length} </p>\r\n              </div>\r\n              <div className=\"flex items-center justify-center w-16 h-16 bg-blue-500 text-white rounded-full\">\r\n                <FiUsers className=\"text-2xl\" />\r\n              </div>\r\n            </Link>\r\n            <div className=\"chart-container\">\r\n              <canvas ref={usersChartRef}></canvas>\r\n            </div>\r\n          </div>\r\n          <div className=\"p-6 bg-white border rounded-md shadow-md hover:shadow-lg transition-shadow duration-500 ease-in-out\">\r\n            <Link to=\"/admin/products\" className=\"flex items-center justify-between\">\r\n              <div>\r\n                <h3 className=\"mb-2 text-lg font-bold text-gray-800\">Products</h3>\r\n                <p className=\"text-gray-600\">Total Products: {pizzas.length}</p>\r\n              </div>\r\n              <div className=\"flex items-center justify-center w-16 h-16 bg-purple-500 text-white rounded-full\">\r\n                <SiProducthunt className=\"text-2xl\" />\r\n              </div>\r\n            </Link>\r\n            <div className=\"chart-container\">\r\n              <canvas ref={productsChartRef}></canvas>\r\n            </div>\r\n          </div>\r\n          <div className=\"p-6 bg-white border rounded-md shadow-md hover:shadow-lg transition-shadow duration-500 ease-in-out\">\r\n            <Link to=\"/admin/orderlist\" className=\"flex items-center justify-between\">\r\n              <div>\r\n                <h3 className=\"mb-2 text-lg font-bold text-gray-800\">Orders</h3>\r\n                <p className=\"text-gray-600\">Total Orders:{orders.length} </p>\r\n              </div>\r\n              <div className=\"flex items-center justify-center w-16 h-16 bg-green-500 text-white rounded-full\">\r\n                <FaShoppingCart className=\"text-2xl\" />\r\n              </div>\r\n            </Link>\r\n            <div className=\"chart-container\">\r\n              <canvas ref={ordersChartRef}></canvas>\r\n            </div>\r\n          </div>\r\n          <div className=\"p-6 bg-white border rounded-md shadow-md hover:shadow-lg transition-shadow duration-500 ease-in-out\">\r\n            <Link to=\"/admin/orderlist\" className=\"flex items-center justify-between\">\r\n              <div>\r\n                <h3 className=\"mb-2 text-lg font-bold text-gray-800\">Revenue</h3>\r\n                <p className=\"text-gray-600\">Total Payment: Rs {calculateTotalOrderValue()}/-</p>\r\n              </div>\r\n              <div className=\"flex items-center justify-center w-12 h-12 bg-green-500 text-white rounded-full\">\r\n                <HiCurrencyRupee className=\"text-xl\" />\r\n              </div>\r\n            </Link>\r\n            <div className=\"chart-container\">\r\n              <canvas ref={revenueChartRef}></canvas>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"p-6 bg-white border rounded-md shadow-md hover:shadow-lg transition-shadow duration-500 ease-in-out\">\r\n            <Link to=\"/admin/orderlist\" className=\"flex items-center justify-between\">\r\n              <div>\r\n                <h3 className=\"mb-2 text-lg font-bold text-gray-800\">Order Status</h3>\r\n                <p className=\"text-gray-600\">Order Status </p>\r\n              </div>\r\n              <div className=\"flex items-center justify-center w-12 h-12 bg-cyan-500 text-white rounded-full\">\r\n                <MdOutlineDeliveryDining className=\"text-xl\" />\r\n              </div>\r\n            </Link>\r\n            <div className=\"chart-container\">\r\n            <canvas ref={orderStatusChartRef} width=\"200\" height=\"200\"></canvas>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"p-6 bg-white border rounded-md shadow-md hover:shadow-lg transition-shadow duration-500 ease-in-out\">\r\n            <Link to=\"/admin/orderlist\" className=\"flex items-center justify-between\">\r\n              <div>\r\n                <h3 className=\"mb-2 text-lg font-bold text-gray-800\">Contact data</h3>\r\n                <p className=\"text-gray-600\">Contact Data Status</p>\r\n              </div>\r\n              <div className=\"flex items-center justify-center w-12 h-12 bg-cyan-500 text-white rounded-full\">\r\n                <AiFillMessage className=\"text-xl\" />\r\n              </div>\r\n            </Link>\r\n            <div className=\"chart-container\">\r\n            <canvas ref={chartRef}></canvas>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n","import axios from \"axios\";\r\n\r\nexport const placeOrder = (token, subTotal) => async (dispatch, getState) => {\r\n  dispatch({ type: \"PLACE_ORDER_REQUEST\" });\r\n  const currentUser = getState().loginUserReducer.currentUser;\r\n  const cartItems = getState().cartReducer.cartItems;\r\n  try {\r\n    await axios.post(\"/api/orders/placeorder\", {\r\n      token,\r\n      subTotal,\r\n      currentUser,\r\n      cartItems,\r\n    });\r\n    dispatch({ type: \"PLACE_ORDER_SUCCESS\" });\r\n    // console.log(res);\r\n  } catch (error) {\r\n    dispatch({ type: \"PLACE_ORDER_FAIL\" });\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getUserOrders = () => async (dispatch, getState) => {\r\n  const currentUser = getState().loginUserReducer.currentUser;\r\n  dispatch({\r\n    type: \"USER_ORDER_REQUEST\",\r\n  });\r\n  try {\r\n    const response = await axios.post(\"/api/orders/getuserorder\", {\r\n      email: currentUser.email,\r\n    });\r\n    // console.log(response);\r\n    dispatch({ type: \"USER_ORDER_SUCCESS\", payload: response.data });\r\n  } catch (error) {\r\n    dispatch({ type: \"USER_ORDER_FAIL\", payload: error });\r\n  }\r\n};\r\nexport const getAllOrders = () => async (dispatch, getState) => {\r\n  // const currentUser = getState().loginUserReducer.currentUser;\r\n  dispatch({\r\n    type: \"ALL_ORDER_REQUEST\",\r\n  });\r\n  try {\r\n    const response = await axios.get(\"/api/orders/alluserorder\");\r\n    dispatch({ type: \"ALL_ORDER_SUCCESS\", payload: response.data });\r\n  } catch (error) {\r\n    dispatch({ type: \"ALL_ORDER_FAIL\", payload: error });\r\n  }\r\n};\r\n\r\nexport const deliverOrder = (orderid) => async (dispatch, getState) => {\r\n  // const currentUser = getState().loginUserReducer.currentUser;\r\n  dispatch({\r\n    type: \"GET_ALL_ORDER_REQUEST\",\r\n  });\r\n  try {\r\n    await axios.post(\"/api/orders/deliverorder\", { orderid });\r\n    // alert(\"Deliverd Success\");\r\n    const orders = await axios.get(\"/api/orders/alluserorder\");\r\n    dispatch({ type: \"GET_ALL_ORDER_SUCCESS\", payload: orders.data });\r\n    window.location.href = \"/admin/orderlist\";\r\n  } catch (error) {\r\n    dispatch({ type: \"GET_ALL_ORDER_FAIL\", payload: error });\r\n  }\r\n};\r\n\r\n\r\nexport const cancelOrder = (orderid) => async (dispatch, getState) => {\r\n  // const currentUser = getState().loginUserReducer.currentUser;\r\n  dispatch({\r\n    type: \"GET_ALL_ORDER_REQUEST\",\r\n  });\r\n  try {\r\n    await axios.post(\"/api/orders/canceOrder\", { orderid });\r\n    // alert(\"Deliverd Success\");\r\n    const orders = await axios.get(\"/api/orders/alluserorder\");\r\n    dispatch({ type: \"GET_ALL_ORDER_SUCCESS\", payload: orders.data });\r\n    window.location.href = \"/admin/orderlist\";\r\n  } catch (error) {\r\n    dispatch({ type: \"GET_ALL_ORDER_FAIL\", payload: error });\r\n  }\r\n};\r\n\r\n","import axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nexport const getAllPizzas = () => async (dispatch) => {\r\n  dispatch({ type: \"GET_PIZZAS_REQUEST\" });\r\n  try {\r\n    const response = await axios.get(\"/api/pizzas/getAllPizzas\");\r\n    // console.log(response.data);\r\n    dispatch({ type: \"GET_PIZZAS_SUCCESS\", payload: response.data });\r\n  } catch (err) {\r\n    dispatch({ type: \"GET_PIZZAS_FAIL\", payload: err });\r\n  }\r\n};\r\n\r\nexport const addPizza = (pizza) => async (dispatch) => {\r\n  dispatch({ type: \"ADD_PIZZAS_REQUEST\" });\r\n  try {\r\n    await axios.post(\"/api/pizzas/addpizza\", { pizza });\r\n    dispatch({ type: \"ADD_PIZZAS_SUCCESS\" });\r\n  } catch (err) {\r\n    dispatch({ type: \"ADD_PIZZAS_FAIL\", payload: err });\r\n  }\r\n};\r\n\r\nexport const getPizzaById = (pizzaId) => async (dispatch) => {\r\n  dispatch({ type: \"GET_PIZZABYID_REQUEST\" });\r\n  try {\r\n    const response = await axios.post(\"/api/pizzas/getpizzabyid\", { pizzaId });\r\n    dispatch({ type: \"GET_PIZZABYID_SUCCESS\", payload: response.data });\r\n  } catch (err) {\r\n    dispatch({ type: \"GET_PIZZABYID_FAIL\", payload: err });\r\n  }\r\n};\r\nexport const updatePizza = (updatedPizza) => async (dispatch) => {\r\n  dispatch({ type: \"UPDATE_PIZZABYID_REQUEST\" });\r\n  try {\r\n    const response = await axios.post(\"/api/pizzas/updatepizza\", {\r\n      updatedPizza,\r\n    });\r\n    dispatch({ type: \"UPDATE_PIZZABYID_SUCCESS\", payload: response.data });\r\n    window.location.href = \"/admin/pizzalist\";\r\n  } catch (err) {\r\n    dispatch({ type: \"UPDATE_PIZZABYID_FAIL\", payload: err });\r\n  }\r\n};\r\n\r\nexport const deletePizza = (pizzaId) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"/api/pizzas/deletepizza\", { pizzaId });\r\n    swal(\"Pizza Deleted Succss!\", \"success\");\r\n    window.location.href = \"/admin/pizzalist\";\r\n    // console.log(res);\r\n  } catch (error) {\r\n    swal(\"Errro While Deleteing Pizza\");\r\n  }\r\n};\r\n\r\nexport const filterPizza = (searchkey, category) => async (dispatch) => {\r\n  let filterdPizza;\r\n  dispatch({ type: \"GET_PIZZAS_REQUEST\" });\r\n  try {\r\n    const res = await axios.get(\"/api/pizzas/getAllPizzas\");\r\n    filterdPizza = res.data.filter((pizza) =>\r\n      pizza.name.toLowerCase().includes(searchkey)\r\n    );\r\n    if (category !== \"all\") {\r\n      filterdPizza = res.data.filter(\r\n        (pizza) => pizza.category.toLowerCase() === category\r\n      );\r\n    };\r\n   \r\n    dispatch({ type: \"GET_PIZZAS_SUCCESS\", payload: filterdPizza });\r\n  } catch (error) {\r\n    dispatch({ type: \"GET_PIZZAS_FAIL\", payload: error });\r\n  }\r\n};","import axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\n// export const registerUser = (user) => async (dispatch) => {\r\n//   dispatch({ type: \"USER_REGISTER_REQUEST\" });\r\n//   try {\r\n//     await axios.post(\"/api/users/register\", user);\r\n//     dispatch({ type: \"USER_REGISTER_SUCCESS\" });\r\n//   } catch (error) {\r\n//     dispatch({ type: \"USER_REGISTER_FAIL\", payload: error });\r\n//   }\r\n// };\r\n\r\nexport const registerUser = (user) => async (dispatch) => {\r\n  dispatch({ type: \"USER_REGISTER_REQUEST\" });\r\n\r\n  try {\r\n    await axios.post(\"/api/users/register\", user);\r\n    dispatch({ type: \"USER_REGISTER_SUCCESS\" });\r\n  } catch (error) {\r\n    if (error.response && error.response.data) {\r\n      dispatch({ type: \"USER_REGISTER_FAIL\", payload: error.response.data });\r\n    } else {\r\n      dispatch({ type: \"USER_REGISTER_FAIL\", payload: \"An error occurred. Please try again.\" });\r\n    }\r\n  }\r\n};\r\n\r\nexport const loginUser = (user) => async (dispatch) => {\r\n  dispatch({ type: \"USER_LOGIN_REQUEST\" });\r\n  try {\r\n    const response = await axios.post(\"/api/users/login\", user);\r\n    console.log(response);\r\n    dispatch({ type: \"USER_LOGIN_SUCCESS\", payload: response.data });\r\n    localStorage.setItem(\"currentUser\", JSON.stringify(response.data));\r\n    window.location.href = \"/\";\r\n  } catch (error) {\r\n    dispatch({ type: \"USER_LOGIN_FAIL\", payload: error });\r\n  }\r\n};\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n  localStorage.removeItem(\"currentUser\");\r\n  window.location.href = \"/login\";\r\n};\r\n\r\nexport const getAllUsers = () => async (dispatch) => {\r\n  dispatch({ type: \"GET_USERS_REQUEST\" });\r\n  try {\r\n    const response = await axios.get(\"/api/users/getallusers\");\r\n    // console.log(response.data);\r\n    dispatch({ type: \"GET_USERS_SUCCESS\", payload: response.data });\r\n  } catch (err) {\r\n    dispatch({ type: \"GET_USERS_FAIL\", payload: err });\r\n  }\r\n};\r\n\r\nexport const deleteUser = (userid) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"/api/users/deleteuser\", { userid });\r\n    swal(\"User Deleted Succss!\", \"success\");\r\n    window.location.reload();\r\n    // console.log(res);\r\n  } catch (error) {\r\n    swal(\"Errro While Deleteing User\");\r\n  }\r\n};"],"names":["useState","dispatch","useDispatch","chartInstanceRef","useRef","usersChartRef","productsChartRef","ordersChartRef","revenueChartRef","orderStatusChartRef","chartRef","pizzas","useSelector","state","getAllPizzaReducer","orders","allUserOrdersReducer","users","getAllUsersReducer","useEffect","getAllPizzas","getAllUsers","getAllOrders","current","ctx","getContext","labels","map","user","Date","createdAt","getDate","toLocaleString","month","data","index","datasets","update","Chart","type","label","backgroundColor","borderColor","borderWidth","options","responsive","maintainAspectRatio","scales","x","display","title","text","y","suggestedMin","suggestedMax","length","categories","pizza","category","uniqueCategories","Set","categoryCount","filter","c","slice","Math","max","ordersByDay","forEach","order","day","toDateString","Object","keys","values","revenueData","orderAmount","deliveredOrders","isDelivered","notDeliveredOrders","chartCanvas","beginAtZero","className","to","ref","totalValue","Number","toFixed","calculateTotalOrderValue","width","height","getUserOrders","getState","currentUser","loginUserReducer","axios","email","response","payload","deliverOrder","orderid","window","location","href","cancelOrder","addPizza","getPizzaById","pizzaId","updatePizza","updatedPizza","deletePizza","swal","filterPizza","searchkey","res","filterdPizza","name","toLowerCase","includes","registerUser","loginUser","console","log","localStorage","setItem","JSON","stringify","logoutUser","removeItem","deleteUser","userid","reload"],"sourceRoot":""}