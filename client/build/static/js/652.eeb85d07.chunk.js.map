{"version":3,"file":"static/js/652.eeb85d07.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/js/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        requestAnimationFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            sync.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                sync.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            sync.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            sync.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            sync.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.2.4\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { sync, cancelSync } from '../../frameloop/index.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n        now: () => performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","import { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nfunction calculateDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration;\n}\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calculateDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = timestamp - startTime;\n        }\n        // Rebase on delay\n        currentTime = Math.max(currentTime - delay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = currentIteration % 2;\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            const p = currentTime >= totalDuration\n                ? repeatType === \"reverse\" && iterationIsOdd\n                    ? 0\n                    : 1\n                : clamp(0, 1, iterationProgress);\n            elapsed = p * resolvedDuration;\n        }\n        const state = frameGenerator.next(elapsed);\n        let { value, done } = state;\n        if (onUpdate) {\n            onUpdate(mapNumbersToKeyframes ? mapNumbersToKeyframes(value) : value);\n        }\n        if (calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (isAnimationFinished) {\n            playState = \"finished\";\n            onComplete && onComplete();\n            animationDriver && animationDriver.stop();\n        }\n        return state;\n    };\n    const play = () => {\n        animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        playState = \"running\";\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime) {\n            // TODO When implementing play/pause, check WAAPI\n            // logic around finished animations\n            startTime = now;\n        }\n        holdTime = null;\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        get currentTime() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set currentTime(newTime) {\n            if (holdTime !== null || !animationDriver) {\n                holdTime = 0;\n            }\n            else {\n                startTime =\n                    animationDriver.now() - secondsToMilliseconds(newTime);\n            }\n        },\n        stop: () => {\n            onStop && onStop();\n            animationDriver && animationDriver.stop();\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set currentTime(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { animateValue } from './js/index.mjs';\n\nfunction createInstantAnimation({ keyframes, delay: delayBy, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        return {\n            stop: () => { },\n            currentTime: 0,\n        };\n    };\n    return delayBy\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: delayBy,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { warning } from '../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\nimport { animateValue } from './js/index.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                sync.update(() => onDragStart(event, info));\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            sync.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        sync.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    sync.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","class GroupPlaybackControls {\n    constructor(animations) {\n        this.animations = animations.filter(Boolean);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    get currentTime() {\n        return this.animations[0].currentTime;\n    }\n    /**\n     * currentTime assignment could reasonably run every frame, so\n     * we iterate using a normal loop to avoid function creation.\n     */\n    set currentTime(time) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i].currentTime = time;\n        }\n    }\n    stop() {\n        this.animations.forEach((controls) => controls.stop());\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !((isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { GroupPlaybackControls } from './GroupPlaybackControls.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return value.animation || new GroupPlaybackControls([]);\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.2.4\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.2.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","initial","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","key","isEnabled","useConstant","init","useRef","current","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","id","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","useInsertionEffect","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","length","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","i","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","values","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","transformers","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","this","isMounted","frameData","delta","timestamp","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","buffer","add","push","cancel","index","splice","delete","process","createRenderStep","sync","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","requestAnimationFrame","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","FocusGesture","arguments","isFocusVisible","matches","onFocus","onBlur","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","startObserver","hasOptionsChanged","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","isZeroValueString","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","c","numSubscriptions","velocityPerSecond","velocity","frameDuration","isFloat","isNaN","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","owner","subscription","on","unsubscribe","read","getSize","stop","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","Promise","resolve","animationStart","then","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","cubicBezierAsString","d","supportedWaapiEasing","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","easing","featureTests","waapi","Element","results","supports","mirrorEasing","reverseEasing","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","keyframes","duration","keyframeValues","times","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","now","performance","types","decay","tween","animateValue","animationDriver","mapNumbersToKeyframes","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","generatorFactory","mirroredGenerator","generator","playState","holdTime","startTime","calculateDuration","resolvedDuration","Infinity","totalDuration","currentTime","tick","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","play","newTime","sample","acceleratedValues","requiresPregeneratedKeyframes","valueName","createAcceleratedAnimation","sampleAnimation","pregeneratedKeyframes","keyframeOptions","iterations","direction","animateStyle","onfinish","getFinalKeyframe","setWithVelocity","createInstantAnimation","delayBy","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","isZero","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","createMotionValueAnimation","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","willChange","animations","animationTypeState","getState","shouldBlockAnimation","appearId","shouldReduceMotion","remove","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance2D","xDelta","yDelta","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","DragGesture","removeGroupControls","controls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","parseCSSVariable","exec","getVariableValue","depth","fallback","getComputedStyle","getPropertyValue","resolveCSSVariables","obj","TypeError","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","useId","usePresence","applyTo","boxShadow","GroupPlaybackControls","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","timeout","checkElapsed","record","data","MotionDebug","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","args","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","preRender","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","searchNode","querySelector","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","ProjectionNode","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parseDomVariant","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","_superPropBase","object","property","getPrototypeOf","_get","Reflect","bind","receiver","base","desc","getOwnPropertyDescriptor","apply","SVGVisualElement","getAttribute","createDomVisualElement","motion","baseConfig","createDomMotionConfig"],"sourceRoot":""}