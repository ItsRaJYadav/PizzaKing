{"version":3,"file":"static/js/7942.d3737576.chunk.js","mappings":"gLAGMA,EAAiD,gDAGjDC,EAAc,SAAH,GAA0C,IAApCC,EAAO,EAAPA,QAASC,EAAmB,EAAnBA,oBAC9B,GAAoCC,EAAAA,EAAAA,WAAS,GAAM,eAA5CC,EAAU,KAAEC,EAAa,KAmBhC,OACE,eAAIC,UAAU,OAAM,UAClB,iBAAKA,UAAU,aAAY,WACzB,eAAGA,UAAU,gBAAe,WAAC,4BAAQ,SAAa,KAAGL,EAAQM,SAC7D,0BAAG,4BAAQ,UAAc,KAAGN,EAAQO,UACpC,0BAAG,4BAAQ,YAAgB,KAAGP,EAAQQ,gBAEtC,0BAAG,4BAAQ,kBAAsB,KAAGR,EAAQS,iBAC5C,0BAAG,4BAAQ,YAAgB,KAAGT,EAAQU,YACtC,iBAAKL,UAAU,OAAM,WACnB,4BAAQ,eACPL,EAAQW,QAAQC,OAAS,KACxB,4BACGZ,EAAQW,QAAQE,MAAM,EAAG,KAAM,KAChC,mBACER,UAAU,oCACVS,QAAS,WACPC,MAAMf,EAAQW,QAChB,EAAE,SACH,kBAKH,0BAAOX,EAAQW,cAInB,0BACE,4BAAQ,mBAAuB,KAAGX,EAAQgB,cAAgB,MAAQ,SAElEhB,EAAQgB,gBACR,oBACEX,UAAU,yEACVS,QAnDW,WACnBV,GAAc,GACda,EAAAA,EAAAA,MACS,GAAD,OAAInB,EAAM,YAAIE,EAAQkB,KAAO,CACjCF,eAAe,IAEhBG,MAAK,SAACC,GACLC,QAAQC,IAAI,mBAAoBF,EAASG,MACzCnB,GAAc,GACdH,EAAoBD,EAAQkB,IAC9B,IACCM,OAAM,SAACC,GACNJ,QAAQC,IAAI,gDAAiDG,GAC7DrB,GAAc,EAChB,GACJ,EAqCUsB,SAAUvB,EAAW,UAEpBA,GACC,iBAAME,UAAU,OAAM,UACpB,SAAC,MAAQ,CAACA,UAAU,gCAEpB,KAAK,uBAQrB,EAqDA,UAnDmB,WACjB,OAAgCH,EAAAA,EAAAA,UAAS,IAAG,eAArCyB,EAAQ,KAAEC,EAAW,MAG5BC,EAAAA,EAAAA,YAAU,WACRC,GACF,GAAG,IAEH,IAAMA,EAAgB,WACpBb,EAAAA,EAAAA,IACOnB,GACJqB,MAAK,SAACC,GACLQ,EAAYR,EAASG,KACvB,IACCC,OAAM,SAACC,GACNJ,QAAQC,IAAI,iDAAkDG,EAChE,GACJ,EAEMxB,EAAsB,SAAC8B,GAC3B,IAAMC,EAAkBL,EAASM,KAAI,SAACjC,GACpC,OAAIA,EAAQkB,MAAQa,GACX,kBAAK/B,GAAO,IAAEgB,eAAe,IAE/BhB,CACT,IACA4B,EAAYI,EACd,EAEA,OACE,iBAAK3B,UAAU,wBAAuB,WACpC,eAAIA,UAAU,0BAAyB,SAAC,8BACxC,gBAAKA,UAAU,6BAA4B,SACxCsB,EAASf,OAAS,GACjB,eAAIP,UAAU,2BAA0B,SACrCsB,EAASd,QAAQqB,UAAUD,KAAI,SAACjC,GAAO,OACtC,SAACD,EAAW,CAEVC,QAASA,EACTC,oBAAqBA,GAFhBD,EAAQkB,IAGb,OAIN,cAAGb,UAAU,gBAAe,SAAC,2CAKvC,C","sources":["Admin/ContactData.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { FiLoader } from 'react-icons/fi';\r\nconst apiUrl = process.env.NODE_ENV === 'production' ? 'https://pizzaking.onrender.com/admin/contacts' : 'http://localhost:8080/admin/contacts';\r\n\r\n\r\nconst ContactItem = ({ contact, handleIssueResolved }) => {\r\n  const [isUpdating, setIsUpdating] = useState(false);\r\n\r\n  const resolveIssue = () => {\r\n    setIsUpdating(true);\r\n    axios\r\n      .patch(`${apiUrl}/${contact._id}`, {\r\n        issueResolved: true,\r\n      })\r\n      .then((response) => {\r\n        console.log('Contact updated:', response.data);\r\n        setIsUpdating(false);\r\n        handleIssueResolved(contact._id);\r\n      })\r\n      .catch((error) => {\r\n        console.log('An error occurred while updating the contact:', error);\r\n        setIsUpdating(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <li className=\"py-4\">\r\n      <div className=\"space-y-2 \">\r\n        <p className=\"font-semibold\"><strong>Name</strong>: {contact.name}</p>\r\n        <p><strong>Email</strong>: {contact.email}</p>\r\n        <p><strong>QueryID</strong>: {contact.complaintId}</p>\r\n\r\n        <p><strong>Mobile Number</strong>: {contact.mobileNumber}</p>\r\n        <p><strong>Subject</strong>: {contact.subject}</p>\r\n        <div className=\"mt-2\">\r\n          <strong>Message : </strong>\r\n          {contact.message.length > 100 ? (\r\n            <span>\r\n              {contact.message.slice(0, 100)}{\" \"}\r\n              <button\r\n                className=\"text-blue-500 hover:text-blue-700\"\r\n                onClick={() => {\r\n                  alert(contact.message);\r\n                }}\r\n              >\r\n                Read More\r\n              </button>\r\n            </span>\r\n          ) : (\r\n            <span>{contact.message}</span>\r\n          )}\r\n        </div>\r\n\r\n        <p>\r\n          <strong>Issue Resolved</strong>: {contact.issueResolved ? 'Yes' : 'No'}\r\n        </p>\r\n        {!contact.issueResolved && (\r\n          <button\r\n            className=\"font-bold py-2 px-4 rounded bg-green-500 hover:bg-green-700 text-white\"\r\n            onClick={resolveIssue}\r\n            disabled={isUpdating}\r\n          >\r\n            {isUpdating ? (\r\n              <span className=\"mr-2\">\r\n                <FiLoader className=\"inline-block animate-spin\" />\r\n              </span>\r\n            ) : null}\r\n            Resolve Issue\r\n          </button>\r\n        )}\r\n      </div>\r\n      \r\n    </li>\r\n  );\r\n};\r\n\r\nconst AdminPanel = () => {\r\n  const [contacts, setContacts] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchContacts();\r\n  }, []);\r\n\r\n  const fetchContacts = () => {\r\n    axios\r\n      .get(apiUrl)\r\n      .then((response) => {\r\n        setContacts(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log('An error occurred while fetching the contacts:', error);\r\n      });\r\n  };\r\n\r\n  const handleIssueResolved = (contactId) => {\r\n    const updatedContacts = contacts.map((contact) => {\r\n      if (contact._id === contactId) {\r\n        return { ...contact, issueResolved: true };\r\n      }\r\n      return contact;\r\n    });\r\n    setContacts(updatedContacts);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Contact Form Submissions</h1>\r\n      <div className=\"max-h-100 overflow-y-auto \">\r\n        {contacts.length > 0 ? (\r\n          <ul className=\"divide-y divide-gray-300\">\r\n            {contacts.slice().reverse().map((contact) => (\r\n              <ContactItem\r\n                key={contact._id}\r\n                contact={contact}\r\n                handleIssueResolved={handleIssueResolved}\r\n              />\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p className=\"text-gray-500\">No contact form submissions found.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n"],"names":["apiUrl","ContactItem","contact","handleIssueResolved","useState","isUpdating","setIsUpdating","className","name","email","complaintId","mobileNumber","subject","message","length","slice","onClick","alert","issueResolved","axios","_id","then","response","console","log","data","catch","error","disabled","contacts","setContacts","useEffect","fetchContacts","contactId","updatedContacts","map","reverse"],"sourceRoot":""}