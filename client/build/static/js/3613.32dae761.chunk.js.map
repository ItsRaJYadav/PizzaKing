{"version":3,"file":"static/js/3613.32dae761.chunk.js","mappings":"0LAIA,SAASA,EAAY,GAAY,IAAVC,EAAK,EAALA,MACrB,GAAgCC,EAAAA,EAAAA,UAAS,IAAG,eAArCC,EAAQ,KAAEC,EAAW,MAE5BC,EAAAA,EAAAA,YAAU,WACRC,EAAqBL,EACvB,GAAG,CAACA,IAEJ,IAAMK,EAAoB,yCAAG,WAAOL,GAAK,qGAEdM,EAAAA,EAAAA,IAAU,4BAAD,OAA6BN,IAAS,KAAD,EAA/DO,EAAQ,OACdJ,EAAYI,EAASC,MAAM,gDAE3BC,QAAQC,MAAM,EAAD,IAAQ,yDAExB,gBAPyB,sCAS1B,OACE,iBAAKC,UAAU,4CAA2C,WACxD,eAAIA,UAAU,0BAAyB,SAAC,iBACnB,IAApBT,EAASU,QACR,uBAAG,4CAEH,eAAID,UAAU,iBAAgB,SAC3BT,EAASW,QAAQC,UAAUC,KAAI,SAACC,GAAO,OACtC,gBAAqBL,UAAU,OAAM,WACnC,gBAAIA,UAAU,yBAAwB,WAAC,4BAAQ,UAAc,IAAE,IAAIM,KAAKD,EAAQE,MAAMC,qBACtF,eAAGR,UAAU,gBAAe,WAAC,4BAAQ,UAAc,IAAEK,EAAQI,SAC7D,eAAGT,UAAU,gBAAe,WAAC,4BAAQ,WAAe,IAAEK,EAAQhB,UAC9D,eAAGW,UAAU,gBAAe,WAAC,4BAAQ,aAAiB,IAAEK,EAAQK,YAChE,eAAGV,UAAU,gBAAe,WAAC,4BAAQ,YAAgB,IAAEK,EAAQM,iBAC/D,iBAAKX,UAAU,oBAAmB,WAChC,iBAAMA,UAAU,8BAA6B,UAAC,4BAAQ,sBACrDK,EAAQO,eACP,iBAAMZ,UAAU,iBAAgB,SAAC,SAEjC,iBAAMA,UAAU,eAAc,SAAC,WAGnC,iBAAKA,UAAU,OAAM,WACnB,4BAAQ,eACPK,EAAQQ,QAAQZ,OAAS,KACxB,4BACGI,EAAQQ,QAAQX,MAAM,EAAG,KAAM,KAChC,mBACEF,UAAU,oCACVc,QAAS,WACPC,MAAMV,EAAQQ,QAChB,EAAE,SACH,kBAKH,0BAAOR,EAAQQ,cAGnB,eAAIb,UAAU,0CAhCPK,EAAQW,GAkCZ,QASjB,CAaA,UAXA,WACE,IACQC,GADUC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,gBAAgB,IACvDH,YAER,OACE,gBAAKjB,UAAU,wBAAuB,UACpC,SAACZ,EAAW,CAACC,MAAO4B,EAAY5B,SAGtC,C","sources":["components/Users/UserSetting.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction ContactList({ email }) {\r\n  const [contacts, setContacts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchContactsByEmail(email);\r\n  }, [email]);\r\n\r\n  const fetchContactsByEmail = async (email) => {\r\n    try {\r\n      const response = await axios.get(`/api/user/contacts?email=${email}`);\r\n      setContacts(response.data);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center\">\r\n      <h1 className=\"text-3xl font-bold mb-4\">Contact Data</h1>\r\n      {contacts.length === 0 ? (\r\n        <p>No contacts found for the given email.</p>\r\n      ) : (\r\n        <ul className=\"list-disc pl-4\">\r\n          {contacts.slice().reverse().map((contact) => (\r\n            <li key={contact.id} className=\"mb-4\">\r\n              <h2 className=\"text-lg font-bold mb-1\"><strong>Date:</strong> {new Date(contact.date).toLocaleString()}</h2>\r\n              <p className=\"text-gray-600\"><strong>Name:</strong> {contact.name}</p>\r\n              <p className=\"text-gray-600\"><strong>Email:</strong> {contact.email}</p>\r\n              <p className=\"text-gray-600\"><strong>Subject:</strong> {contact.subject}</p>\r\n              <p className=\"text-gray-600\"><strong>Mobile:</strong> {contact.mobileNumber}</p>\r\n              <div className=\"flex items-center\">\r\n                <span className=\"text-sm text-green-500 mr-1\"><strong>Issue Resolved:</strong></span>\r\n                {contact.issueResolved ? (\r\n                  <span className=\"text-green-600\">Yes</span>\r\n                ) : (\r\n                  <span className=\"text-red-600\">No</span>\r\n                )}\r\n              </div>\r\n              <div className=\"mt-2\">\r\n                <strong>Message : </strong>\r\n                {contact.message.length > 100 ? (\r\n                  <span>\r\n                    {contact.message.slice(0, 100)}{\" \"}\r\n                    <button\r\n                      className=\"text-blue-500 hover:text-blue-700\"\r\n                      onClick={() => {\r\n                        alert(contact.message);\r\n                      }}\r\n                    >\r\n                      Read More\r\n                    </button>\r\n                  </span>\r\n                ) : (\r\n                  <span>{contact.message}</span>\r\n                )}\r\n              </div>\r\n              <hr className=\"border-t border-gray-800 mb-4 mt-10\" />\r\n\r\n            </li>\r\n            \r\n          ))}\r\n        </ul>\r\n\r\n\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  const userState = useSelector((state) => state.loginUserReducer);\r\n  const { currentUser } = userState;\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      <ContactList email={currentUser.email} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"names":["ContactList","email","useState","contacts","setContacts","useEffect","fetchContactsByEmail","axios","response","data","console","error","className","length","slice","reverse","map","contact","Date","date","toLocaleString","name","subject","mobileNumber","issueResolved","message","onClick","alert","id","currentUser","useSelector","state","loginUserReducer"],"sourceRoot":""}