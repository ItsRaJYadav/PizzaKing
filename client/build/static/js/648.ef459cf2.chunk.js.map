{"version":3,"file":"static/js/648.ef459cf2.chunk.js","mappings":"sNA4FA,UApFkB,WAChB,IAAMA,GAAiBC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,oBAAoB,IAChEC,EAA2BJ,EAA3BI,QAASC,EAAkBL,EAAlBK,OAAQC,EAAUN,EAAVM,MACnBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,MACX,GAAG,CAACH,IAkBJ,OACE,2BACGH,IAAW,SAAC,IAAM,IAClBE,IAAS,SAAC,IAAK,CAACA,MAAM,gCACvB,gBAAKK,UAAU,kBAAiB,UAC9B,mBAAOA,UAAU,oCAAmC,WAClD,4BACE,gBAAIA,UAAU,6DAA4D,WACxE,eAAIA,UAAU,sBAAqB,SAAC,cACpC,eAAIA,UAAU,sBAAqB,SAAC,WACpC,eAAIA,UAAU,sBAAqB,SAAC,cACpC,eAAIA,UAAU,sBAAqB,SAAC,YACpC,eAAIA,UAAU,sBAAqB,SAAC,UACpC,eAAIA,UAAU,sBAAqB,SAAC,YACpC,eAAIA,UAAU,sBAAqB,SAAC,sBAGxC,2BACGN,GACCA,EAAOO,KAAI,SAACC,GAAK,OACf,gBAAoBF,UAAU,6CAA4C,WACxE,eAAIA,UAAU,YAAW,UACzB,SAAC,KAAI,CAACG,GAAE,2BAAsBD,EAAME,KAAM,SAAEF,EAAME,SAElD,eAAIJ,UAAU,YAAW,SAAEE,EAAMG,SACjC,eAAIL,UAAU,YAAW,SAAEE,EAAMI,QACjC,gBAAIN,UAAU,YAAW,UAAC,MAAIE,EAAMK,YAAY,SAChD,eAAIP,UAAU,YAAW,SAAEE,EAAMM,UAAUC,UAAU,EAAG,OACxD,eAAIT,UAAU,YAAW,SACtBE,EAAMQ,aACL,eAAIV,UAAU,iBAAgB,SAAC,eAE/B,mBACEA,UAAU,qEACVW,QAAS,kBAlDHC,EAkD4BV,EAAME,SAjD5DS,IAAAA,KAAU,CACRC,MAAO,gBACPC,KAAM,+CACNC,KAAM,UACNC,kBAAkB,EAClBC,kBAAmB,mBACnBC,iBAAkB,WACjBC,MAAK,SAACC,GACHA,EAAOC,cACT1B,GAAS2B,EAAAA,EAAAA,IAAaX,IACtBC,IAAAA,KAAU,aAAc,gCAAiC,WAE7D,IAbyB,IAACD,CAkDsC,EAAC,SAC9C,eAKL,eAAIZ,UAAU,YAAW,UACvB,wBACGE,EAAMsB,WAAWvB,KAAI,SAACwB,GAAI,OACzB,wBAAoBA,EAAKnB,MAAhBmB,EAAKrB,IAAqB,UAvBlCF,EAAME,IA2BV,YAKf,gBAAKJ,UAAU,sBAAqB,UAClC,SAAC,KAAM,QAIf,C,4CChFA,IARc,SAAH,GAAmB,IAAbL,EAAK,EAALA,MACf,OACE,gBAAKK,UAAU,2EAA0E,UACvF,iBAAMA,UAAU,kBAAiB,SAAEL,KAGzC,C,4CCEA,IARe,WACb,OACE,gBAAKK,UAAU,mCAAkC,UAC/C,gBAAKA,UAAU,+EAGrB,C,kKCNa0B,EAAa,SAACC,EAAOC,GAAQ,gDAAK,WAAOhC,EAAUiC,GAAQ,8EAGpB,OAFlDjC,EAAS,CAAEkC,KAAM,wBACXC,EAAcF,IAAWG,iBAAiBD,YAC1CE,EAAYJ,IAAWK,YAAYD,UAAU,EAAD,gBAE1CE,EAAAA,EAAAA,KAAW,yBAA0B,CACzCR,MAAAA,EACAC,SAAAA,EACAG,YAAAA,EACAE,UAAAA,IACC,KAAD,EACFrC,EAAS,CAAEkC,KAAM,wBACjB,gDAEAlC,EAAS,CAAEkC,KAAM,qBACjBM,QAAQC,IAAI,EAAD,IAAQ,yDAEtB,qDAjByC,EAiBzC,EAEYC,EAAgB,WAAH,gDAAS,WAAO1C,EAAUiC,GAAQ,8EAIvD,OAHGE,EAAcF,IAAWG,iBAAiBD,YAChDnC,EAAS,CACPkC,KAAM,uBACL,kBAEsBK,EAAAA,EAAAA,KAAW,2BAA4B,CAC5DI,OAAQR,EAAY1B,QACnB,KAAD,EAFImC,EAAQ,OAId5C,EAAS,CAAEkC,KAAM,qBAAsBW,QAASD,EAASE,OAAQ,gDAEjE9C,EAAS,CAAEkC,KAAM,kBAAmBW,QAAQ,EAAD,KAAW,yDAEzD,qDAdyB,EAczB,EACY1C,EAAe,WAAH,gDAAS,WAAOH,EAAUiC,GAAQ,4EAItD,OAFHjC,EAAS,CACPkC,KAAM,sBACL,kBAEsBK,EAAAA,EAAAA,IAAU,4BAA4B,KAAD,EAAtDK,EAAQ,OACd5C,EAAS,CAAEkC,KAAM,oBAAqBW,QAASD,EAASE,OAAQ,gDAEhE9C,EAAS,CAAEkC,KAAM,iBAAkBW,QAAQ,EAAD,KAAW,yDAExD,qDAXwB,EAWxB,EAEYlB,EAAe,SAACoB,GAAO,gDAAK,WAAO/C,EAAUiC,GAAQ,4EAI7D,OAFHjC,EAAS,CACPkC,KAAM,0BACL,kBAEKK,EAAAA,EAAAA,KAAW,2BAA4B,CAAEQ,QAAAA,IAAW,KAAD,kBAEpCR,EAAAA,EAAAA,IAAU,4BAA4B,KAAD,EAApDzC,EAAM,OACZE,EAAS,CAAEkC,KAAM,wBAAyBW,QAAS/C,EAAOgD,OAC1DE,OAAOC,SAASC,KAAO,mBAAmB,kDAE1ClD,EAAS,CAAEkC,KAAM,qBAAsBW,QAAQ,EAAD,KAAW,0DAE5D,qDAdmC,EAcnC,C","sources":["Admin/OrderList.jsx","Alerts/Error.jsx","Alerts/Loader.js","action/orderAction.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deliverOrder, getAllOrders } from \"../action/orderAction\";\r\nimport Loader from \"../Alerts/Loader\";\r\nimport Error from \"../Alerts/Error\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Link, Outlet } from \"react-router-dom\";\r\n\r\nconst OrderList = () => {\r\n  const allOrdersState = useSelector((state) => state.allUserOrdersReducer);\r\n  const { loading, orders, error } = allOrdersState;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllOrders());\r\n  }, [dispatch]);\r\n\r\n  const handleOrderDeliver = (orderId) => {\r\n    Swal.fire({\r\n      title: \"Deliver Order\",\r\n      text: \"Are you sure you want to deliver this order?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: \"Yes, deliver it!\",\r\n      cancelButtonText: \"Cancel\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        dispatch(deliverOrder(orderId));\r\n        Swal.fire(\"Delivered!\", \"The order has been delivered.\", \"success\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading && <Loader />}\r\n      {error && <Error error=\"Admin Order request failed\" />}\r\n      <div className=\"overflow-x-auto\">\r\n        <table className=\"w-full bg-white shadow-md rounded\">\r\n          <thead>\r\n            <tr className=\"bg-gray-200 text-gray-700 uppercase text-sm leading-normal\">\r\n              <th className=\"py-3 px-4 text-left\">Order Id</th>\r\n              <th className=\"py-3 px-4 text-left\">Email</th>\r\n              <th className=\"py-3 px-4 text-left\">Customer</th>\r\n              <th className=\"py-3 px-4 text-left\">Amount</th>\r\n              <th className=\"py-3 px-4 text-left\">Date</th>\r\n              <th className=\"py-3 px-4 text-left\">Status</th>\r\n              <th className=\"py-3 px-4 text-left\">Order Items</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders &&\r\n              orders.map((order) => (\r\n                <tr key={order._id} className=\"border-b border-gray-200 hover:bg-gray-100\">\r\n                  <td className=\"py-4 px-6\">\r\n                  <Link to={`/admin/orderlist/${order._id}`}>{order._id}</Link>\r\n                  </td>\r\n                  <td className=\"py-4 px-6\">{order.email}</td>\r\n                  <td className=\"py-4 px-6\">{order.name}</td>\r\n                  <td className=\"py-4 px-6\">Rs {order.orderAmount}/-</td>\r\n                  <td className=\"py-4 px-6\">{order.createdAt.substring(0, 10)}</td>\r\n                  <td className=\"py-4 px-6\">\r\n                    {order.isDelivered ? (\r\n                      <h6 className=\"text-green-500\">Delivered</h6>\r\n                    ) : (\r\n                      <button\r\n                        className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\"\r\n                        onClick={() => handleOrderDeliver(order._id)}\r\n                      >\r\n                        Deliver\r\n                      </button>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"py-4 px-6\">\r\n                    <ul>\r\n                      {order.orderItems.map((item) => (\r\n                        <li key={item._id}>{item.name}</li>\r\n                      ))}\r\n                    </ul>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"flex-1 bg-white p-8\">\r\n        <Outlet />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderList;\r\n\r\n\r\n","import React from \"react\";\r\n\r\nconst Error = ({ error }) => {\r\n  return (\r\n    <div className=\"bg-red-100 border border-red-500 text-red-700 px-4 py-3 rounded relative\">\r\n      <span className=\"block sm:inline\">{error}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React from \"react\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"flex items-center justify-center\">\r\n      <div className=\"border-t-4 border-b-4 border-blue-500 rounded-full w-12 h-12 animate-spin\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import axios from \"axios\";\r\n\r\nexport const placeOrder = (token, subTotal) => async (dispatch, getState) => {\r\n  dispatch({ type: \"PLACE_ORDER_REQUEST\" });\r\n  const currentUser = getState().loginUserReducer.currentUser;\r\n  const cartItems = getState().cartReducer.cartItems;\r\n  try {\r\n    await axios.post(\"/api/orders/placeorder\", {\r\n      token,\r\n      subTotal,\r\n      currentUser,\r\n      cartItems,\r\n    });\r\n    dispatch({ type: \"PLACE_ORDER_SUCCESS\" });\r\n    // console.log(res);\r\n  } catch (error) {\r\n    dispatch({ type: \"PLACE_ORDER_FAIL\" });\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getUserOrders = () => async (dispatch, getState) => {\r\n  const currentUser = getState().loginUserReducer.currentUser;\r\n  dispatch({\r\n    type: \"USER_ORDER_REQUEST\",\r\n  });\r\n  try {\r\n    const response = await axios.post(\"/api/orders/getuserorder\", {\r\n      userid: currentUser.email,\r\n    });\r\n    // console.log(response);\r\n    dispatch({ type: \"USER_ORDER_SUCCESS\", payload: response.data });\r\n  } catch (error) {\r\n    dispatch({ type: \"USER_ORDER_FAIL\", payload: error });\r\n  }\r\n};\r\nexport const getAllOrders = () => async (dispatch, getState) => {\r\n  // const currentUser = getState().loginUserReducer.currentUser;\r\n  dispatch({\r\n    type: \"ALL_ORDER_REQUEST\",\r\n  });\r\n  try {\r\n    const response = await axios.get(\"/api/orders/alluserorder\");\r\n    dispatch({ type: \"ALL_ORDER_SUCCESS\", payload: response.data });\r\n  } catch (error) {\r\n    dispatch({ type: \"ALL_ORDER_FAIL\", payload: error });\r\n  }\r\n};\r\n\r\nexport const deliverOrder = (orderid) => async (dispatch, getState) => {\r\n  // const currentUser = getState().loginUserReducer.currentUser;\r\n  dispatch({\r\n    type: \"GET_ALL_ORDER_REQUEST\",\r\n  });\r\n  try {\r\n    await axios.post(\"/api/orders/deliverorder\", { orderid });\r\n    // alert(\"Deliverd Success\");\r\n    const orders = await axios.get(\"/api/orders/alluserorder\");\r\n    dispatch({ type: \"GET_ALL_ORDER_SUCCESS\", payload: orders.data });\r\n    window.location.href = \"/admin/orderlist\";\r\n  } catch (error) {\r\n    dispatch({ type: \"GET_ALL_ORDER_FAIL\", payload: error });\r\n  }\r\n};"],"names":["allOrdersState","useSelector","state","allUserOrdersReducer","loading","orders","error","dispatch","useDispatch","useEffect","getAllOrders","className","map","order","to","_id","email","name","orderAmount","createdAt","substring","isDelivered","onClick","orderId","Swal","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","then","result","isConfirmed","deliverOrder","orderItems","item","placeOrder","token","subTotal","getState","type","currentUser","loginUserReducer","cartItems","cartReducer","axios","console","log","getUserOrders","userid","response","payload","data","orderid","window","location","href"],"sourceRoot":""}