{"version":3,"file":"static/js/1518.0309c33a.chunk.js","mappings":"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","sources":["Alerts/sucess.jsx","Admin/AddnewPizza.jsx","Admin/Loader.jsx","Alerts/Error.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\n\r\nconst Success = ({ success, dismiss }) => {\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      dismiss();\r\n    }, 3000); // Auto-dismiss after 3 seconds (adjust as needed)\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [dismiss]);\r\n\r\n  return (\r\n    <div className=\"bg-green-200 text-green-800 border border-green-300 p-4 rounded animate__animated animate__fadeInDown\">\r\n      {success}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Success;\r\n","import React, { useState ,useEffect} from \"react\";\r\nimport { addPizza } from \"../action/pizzaAction\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"./Loader\";\r\nimport Error from \"../Alerts/Error\";\r\nimport Success from \"../Alerts/sucess\";\r\nimport { HiOutlineSelector } from 'react-icons/hi'\r\n\r\nconst AddNewPizza = () => {\r\n  const [name, setname] = useState(\"\");\r\n  const [smallPrice, setsmallPrice] = useState();\r\n  const [largeprice, setlargprice] = useState();\r\n  const [mediumPrice, setmediumPrice] = useState();\r\n  const [image, setimage] = useState(\"\");\r\n  const [description, setdescription] = useState(\"\");\r\n  const [category, setcategory] = useState(\"\");\r\n\r\n  const addPizzaState = useSelector((state) => state.addPizzaReducer);\r\n  const { loading, error, success } = addPizzaState;\r\n  const [succes, setSuccess] = useState(false);\r\n  const [loadings, setLoading] = useState(false);\r\n  const [errors, setError] = useState(false);\r\n  \r\n\r\n  const dispatch = useDispatch();\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n    const pizza = {\r\n      name,\r\n      image,\r\n      description,\r\n      category,\r\n      prices: {\r\n        small: smallPrice,\r\n        medium: mediumPrice,\r\n        large: largeprice,\r\n      },\r\n    };\r\n  \r\n  setLoading(true);\r\n    dispatch(addPizza(pizza))\r\n      .then(() => {\r\n        setLoading(false);\r\n        setSuccess(true);\r\n        resetForm();\r\n        setTimeout(() => {\r\n          setSuccess(false);\r\n        }, 2000); // Timeout duration in milliseconds (e.g., 3000ms = 3 seconds)\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        setError(true);\r\n      });\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setname(\"\");\r\n    setimage(\"\");\r\n    setdescription(\"\");\r\n    setcategory(\"\");\r\n    setsmallPrice(\"\");\r\n    setmediumPrice(\"\");\r\n    setlargprice(\"\");\r\n  };\r\n  \r\n\r\n  \r\n  return (\r\n    <div>\r\n      {loadings &&  <Loader />}\r\n      {errors && error&& <Error error=\"add new pizza error\" />}\r\n      {succes && success && <Success success=\"Pizza Added Successfully\" />}\r\n\r\n      <form onSubmit={submitForm} className=\"bg-light p-4\">\r\n        <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4\">\r\n          <div>\r\n            <label className=\"block mb-2 font-bold text-gray-700\" htmlFor=\"formGridEmail\">\r\n              Name\r\n            </label>\r\n            <input \r\n              required\r\n              className=\"w-full px-4 py-2 mb-3 leading-tight text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline\"\r\n              id=\"formGridEmail\"\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={(e) => setname(e.target.value)}\r\n              placeholder=\"Enter email\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label className=\"block mb-2 font-bold text-gray-700\" htmlFor=\"formGridCity\">\r\n              Small Price\r\n            </label>\r\n            <input\r\n              required\r\n              className=\"w-full px-4 py-2 mb-3 leading-tight text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline\"\r\n              id=\"formGridCity\"\r\n              type=\"text\"\r\n              value={smallPrice}\r\n              onChange={(e) => setsmallPrice(e.target.value)}\r\n              placeholder=\"Enter Small Price\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label className=\"block mb-2 font-bold text-gray-700\" htmlFor=\"formGridState\">\r\n              Medium Price\r\n            </label>\r\n            <input\r\n              required\r\n              className=\"w-full px-4 py-2 mb-3 leading-tight text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline\"\r\n              id=\"formGridState\"\r\n              type=\"text\"\r\n              value={mediumPrice}\r\n              onChange={(e) => setmediumPrice(e.target.value)}\r\n              placeholder=\"Enter medium price\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label className=\"block mb-2 font-bold text-gray-700\" htmlFor=\"formGridZip\">\r\n              Large Price\r\n            </label>\r\n            <input\r\n              required\r\n              className=\"w-full px-4 py-2 mb-3 leading-tight text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline\"\r\n              id=\"formGridZip\"\r\n              type=\"text\"\r\n              value={largeprice}\r\n              onChange={(e) => setlargprice(e.target.value)}\r\n              placeholder=\"Enter Large Price\"\r\n            />\r\n          </div>\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-gray-700 font-bold mb-2\" htmlFor=\"category\">\r\n              Category\r\n            </label>\r\n            <div className=\"relative\">\r\n              <select\r\n                className=\"block appearance-none w-full bg-white border border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded shadow leading-tight focus:outline-none focus:shadow-outline\"\r\n                id=\"category\"\r\n                value={category}\r\n                onChange={(e) => setcategory(e.target.value)}\r\n              >\r\n                <option value=\"burger\">burger</option>\r\n                <option value=\"fries\">fries</option>\r\n                <option value=\"mix\">mix</option>\r\n                <option value=\"drink\">drinks</option>\r\n                <option value=\"pizza\">pizza</option>\r\n                <option value=\"thali\">thali</option>\r\n               \r\n              </select>\r\n              <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\r\n                <HiOutlineSelector />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block mb-2 font-bold text-gray-700\" htmlFor=\"formGridPassword\">\r\n              Image\r\n            </label>\r\n            <input\r\n              required\r\n              className=\"w-full px-4 py-2 mb-3 leading-tight text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline\"\r\n              id=\"formGridPassword\"\r\n              type=\"text\"\r\n              value={image}\r\n              onChange={(e) => setimage(e.target.value)}\r\n              placeholder=\"Add Image URL\"\r\n            />\r\n          </div>\r\n          <div className=\"sm:col-span-2\">\r\n            <label className=\"block mb-2 font-bold text-gray-700\" htmlFor=\"formGridAddress1\">\r\n              Description\r\n            </label>\r\n            <textarea\r\n            required\r\n              className=\"w-full px-4 py-2 mb-3 leading-tight text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline\"\r\n              id=\"formGridAddress1\"\r\n              value={description}\r\n              onChange={(e) => setdescription(e.target.value)}\r\n              placeholder=\"Enter Description\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-600 focus:ring-opacity-50\"\r\n        >\r\n          Add New\r\n        </button>\r\n\r\n      </form>\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddNewPizza;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { FaSpinner } from 'react-icons/fa';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"fixed top-0 left-0 w-full h-full flex items-center justify-center\">\r\n      <div className=\"absolute top-1/2 left-30 transform -translate-y-1/2\">\r\n        <FaSpinner  className=\"animate-spin text-6xl text-gray-600\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\n\r\nconst Error = ({ error }) => {\r\n  return (\r\n    <div className=\"bg-red-100 border border-red-500 text-red-700 px-4 py-3 rounded relative\">\r\n      <span className=\"block sm:inline\">{error}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n"],"names":["success","dismiss","useEffect","timer","setTimeout","clearTimeout","className","useState","name","setname","smallPrice","setsmallPrice","largeprice","setlargprice","mediumPrice","setmediumPrice","image","setimage","description","setdescription","category","setcategory","addPizzaState","useSelector","state","addPizzaReducer","error","loading","succes","setSuccess","loadings","setLoading","errors","setError","dispatch","useDispatch","resetForm","Loader","Error","onSubmit","e","preventDefault","pizza","prices","small","medium","large","addPizza","then","catch","htmlFor","required","id","type","value","onChange","target","placeholder"],"sourceRoot":""}