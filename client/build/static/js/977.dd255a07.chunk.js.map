{"version":3,"file":"static/js/977.dd255a07.chunk.js","mappings":"iOA2IA,UApIkB,SAAH,GAAmB,IAAbA,EAAK,EAALA,MACnB,GAAwBC,EAAAA,EAAAA,UAAS,IAAG,eAA7BC,EAAI,KAAEC,EAAO,KACpB,GAAoCF,EAAAA,EAAAA,YAAU,eAAvCG,EAAU,KAAEC,EAAa,KAChC,GAAkCJ,EAAAA,EAAAA,YAAU,eAArCK,EAAS,KAAEC,EAAY,KAC9B,GAAsCN,EAAAA,EAAAA,YAAU,eAAzCO,EAAW,KAAEC,EAAc,KAClC,GAA0BR,EAAAA,EAAAA,UAAS,IAAG,eAA/BS,EAAK,KAAEC,EAAQ,KACtB,GAAsCV,EAAAA,EAAAA,UAAS,IAAG,eAA3CW,EAAW,KAAEC,EAAc,KAClC,GAAgCZ,EAAAA,EAAAA,UAAS,IAAG,eAArCa,EAAQ,KAAEC,EAAW,KACtBC,GAAWC,EAAAA,EAAAA,MACXC,GAAkBC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,mBAAmB,IAChEC,EAAiBJ,EAAjBI,MAAOC,EAAUL,EAAVK,MAEPC,GADiBL,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMK,sBAAsB,IACpED,eACRE,EAAAA,EAAAA,YAAU,WACJH,GACEA,EAAMI,MAAQ3B,EAAM4B,OAAOC,SAC7B1B,EAAQoB,EAAMrB,MACdW,EAAeU,EAAMX,aACrBG,EAAYQ,EAAMT,UAClBH,EAASY,EAAMb,OACfL,EAAckB,EAAMO,OAAO,GAAU,OACrCrB,EAAec,EAAMO,OAAO,GAAW,QACvCvB,EAAagB,EAAMO,OAAO,GAAU,QAKtCd,GAASe,EAAAA,EAAAA,IAAa/B,EAAM4B,OAAOC,SAEvC,GAAG,CAACN,EAAOP,EAAUhB,EAAM4B,OAAOC,UAiBlC,OACE,2BACGL,IAAiB,SAAC,IAAM,IACxBF,IAAS,SAAC,IAAK,CAACA,MAAM,yBAEvB,UAAC,IAAI,CAACU,SArBS,SAACC,GAClBA,EAAEC,iBACF,IAAMC,EAAe,CACnBR,IAAK3B,EAAM4B,OAAOC,QAClB3B,KAAAA,EACAQ,MAAAA,EACAE,YAAAA,EACAE,SAAAA,EACAgB,OAAQ,CACNM,MAAOhC,EACPiC,OAAQ7B,EACR8B,KAAMhC,IAGVU,GAASuB,EAAAA,EAAAA,IAAYJ,GACvB,EAMgCK,UAAU,eAAc,WAClD,UAAC,IAAG,CAACA,UAAU,OAAM,WACnB,UAAC,UAAU,CAACC,GAAIC,EAAAA,EAAKC,UAAU,gBAAe,WAC5C,SAAC,UAAU,UAAC,UACZ,SAAC,YAAY,CACXC,KAAK,OACLC,MAAO3C,EACP4C,SAAU,SAACb,GAAC,OAAK9B,EAAQ8B,EAAEc,OAAOF,MAAM,EACxCG,YAAY,oBAGhB,UAAC,IAAG,CAACR,UAAU,YAAW,WACxB,UAAC,UAAU,CAACC,GAAIC,EAAAA,EAAKC,UAAU,eAAc,WAC3C,SAAC,UAAU,UAAC,iBACZ,SAAC,YAAY,CACXC,KAAK,OACLC,MAAOzC,EACP0C,SAAU,SAACb,GAAC,OAAK5B,EAAc4B,EAAEc,OAAOF,MAAM,EAC9CG,YAAY,0BAIhB,UAAC,UAAU,CAACP,GAAIC,EAAAA,EAAKC,UAAU,gBAAe,WAC5C,SAAC,UAAU,UAAC,kBACZ,SAAC,YAAY,CACXC,KAAK,OACLC,MAAOrC,EACPsC,SAAU,SAACb,GAAC,OAAKxB,EAAewB,EAAEc,OAAOF,MAAM,EAC/CG,YAAY,2BAIhB,UAAC,UAAU,CAACP,GAAIC,EAAAA,EAAKC,UAAU,cAAa,WAC1C,SAAC,UAAU,UAAC,gBACZ,SAAC,YAAY,CACXC,KAAK,OACLC,MAAOvC,EACPwC,SAAU,SAACb,GAAC,OAAK1B,EAAa0B,EAAEc,OAAOF,MAAM,EAC7CG,YAAY,4BAIlB,UAAC,UAAU,CAACP,GAAIC,EAAAA,EAAKC,UAAU,mBAAkB,WAC/C,SAAC,UAAU,UAAC,WACZ,SAAC,YAAY,CACXM,MAAM,OACNJ,MAAOnC,EACPoC,SAAU,SAACb,GAAC,OAAKtB,EAASsB,EAAEc,OAAOF,MAAM,EACzCG,YAAY,yBAKlB,UAAC,UAAU,CAACR,UAAU,OAAOG,UAAU,mBAAkB,WACvD,SAAC,UAAU,UAAC,iBACZ,SAAC,YAAY,CACXC,KAAK,OACLC,MAAOjC,EACPkC,SAAU,SAACb,GAAC,OAAKpB,EAAeoB,EAAEc,OAAOF,MAAM,EAC/CG,YAAY,0BAIhB,UAAC,UAAU,CAACR,UAAU,OAAOG,UAAU,mBAAkB,WACvD,SAAC,UAAU,UAAC,cACZ,SAAC,YAAY,CACXC,KAAK,OACLC,MAAO/B,EACPgC,SAAU,SAACb,GAAC,OAAKlB,EAAYkB,EAAEc,OAAOF,MAAM,EAC5CG,YAAY,uBAIhB,SAAC,IAAM,CAACE,QAAQ,UAAUN,KAAK,SAAQ,SAAC,sBAMhD,C,sDC5HA,IAVe,WACb,OACE,gBAAKJ,UAAU,oEAAmE,UAChF,gBAAKA,UAAU,sDAAqD,UAClE,SAAC,MAAS,CAAEA,UAAU,2CAI9B,C,sDCLA,IAJc,SAAH,GAAmB,IAAblB,EAAK,EAALA,MACf,OAAO,SAAC,IAAK,CAAC4B,QAAQ,SAAQ,SAAE5B,GAClC,C,qOCFa6B,EAAe,WAAH,gDAAS,WAAOnC,GAAQ,4EACN,OAAzCA,EAAS,CAAE4B,KAAM,uBAAwB,kBAEhBQ,EAAAA,EAAAA,IAAU,4BAA4B,KAAD,EAAtDC,EAAQ,OAEdrC,EAAS,CAAE4B,KAAM,qBAAsBU,QAASD,EAASE,OAAQ,gDAEjEvC,EAAS,CAAE4B,KAAM,kBAAmBU,QAAQ,EAAD,KAAS,yDAEvD,mDATwB,EASxB,EAEYE,EAAW,SAACjC,GAAK,gDAAK,WAAOP,GAAQ,sEACP,OAAzCA,EAAS,CAAE4B,KAAM,uBAAwB,kBAEjCQ,EAAAA,EAAAA,KAAW,uBAAwB,CAAE7B,MAAAA,IAAS,KAAD,EACnDP,EAAS,CAAE4B,KAAM,uBAAwB,gDAEzC5B,EAAS,CAAE4B,KAAM,kBAAmBU,QAAQ,EAAD,KAAS,yDAEvD,mDAR6B,EAQ7B,EAEYvB,EAAe,SAACF,GAAO,gDAAK,WAAOb,GAAQ,4EACV,OAA5CA,EAAS,CAAE4B,KAAM,0BAA2B,kBAEnBQ,EAAAA,EAAAA,KAAW,2BAA4B,CAAEvB,QAAAA,IAAW,KAAD,EAApEwB,EAAQ,OACdrC,EAAS,CAAE4B,KAAM,wBAAyBU,QAASD,EAASE,OAAQ,gDAEpEvC,EAAS,CAAE4B,KAAM,qBAAsBU,QAAQ,EAAD,KAAS,yDAE1D,mDARmC,EAQnC,EACYf,EAAc,SAACJ,GAAY,gDAAK,WAAOnB,GAAQ,4EACX,OAA/CA,EAAS,CAAE4B,KAAM,6BAA8B,kBAEtBQ,EAAAA,EAAAA,KAAW,0BAA2B,CAC3DjB,aAAAA,IACC,KAAD,EAFIkB,EAAQ,OAGdrC,EAAS,CAAE4B,KAAM,2BAA4BU,QAASD,EAASE,OAC/DE,OAAOC,SAASC,KAAO,mBAAmB,gDAE1C3C,EAAS,CAAE4B,KAAM,wBAAyBU,QAAQ,EAAD,KAAS,yDAE7D,mDAXuC,EAWvC,EAEYM,EAAc,SAAC/B,GAAO,gDAAK,WAAOb,GAAQ,+FAE7CoC,EAAAA,EAAAA,KAAW,0BAA2B,CAAEvB,QAAAA,IAAW,KAAD,EACxDgC,IAAK,wBAAyB,WAC9BJ,OAAOC,SAASC,KAAO,mBACvB,gDAEAE,IAAK,+BAA+B,yDAEvC,mDATkC,EASlC,EAEYC,EAAc,SAACC,EAAWjD,GAAQ,gDAAK,WAAOE,GAAQ,8EAExB,OAAzCA,EAAS,CAAE4B,KAAM,uBAAwB,kBAErBQ,EAAAA,EAAAA,IAAU,4BAA4B,KAAD,EAAjDY,EAAG,OACTC,EAAeD,EAAIT,KAAKW,QAAO,SAAC3C,GAAK,OACnCA,EAAMrB,KAAKiE,cAAcC,SAASL,EAAU,IAE7B,QAAbjD,IACFmD,EAAeD,EAAIT,KAAKW,QACtB,SAAC3C,GAAK,OAAKA,EAAMT,SAASqD,gBAAkBrD,CAAQ,KAGxDE,EAAS,CAAE4B,KAAM,qBAAsBU,QAASW,IAAgB,kDAEhEjD,EAAS,CAAE4B,KAAM,kBAAmBU,QAAQ,EAAD,KAAW,0DAEzD,mDAjB8C,EAiB9C,C","sources":["Admin/EditPizza.jsx","Admin/Loader.jsx","Alerts/Error.jsx","action/pizzaAction.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getPizzaById, updatePizza } from \"../action/pizzaAction\";\r\nimport Loader from \"./Loader\";\r\nimport Error from \"../Alerts/Error\";\r\n\r\nconst EditPizza = ({ match }) => {\r\n  const [name, setname] = useState(\"\");\r\n  const [smallPrice, setsmallPrice] = useState();\r\n  const [largprice, setlargprice] = useState();\r\n  const [mediumPrice, setmediumPrice] = useState();\r\n  const [image, setimage] = useState(\"\");\r\n  const [description, setdescription] = useState(\"\");\r\n  const [category, setcategory] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const getPizzaByState = useSelector((state) => state.getPizzaByIdReducer);\r\n  const { error, pizza } = getPizzaByState;\r\n  const updatePizzaState = useSelector((state) => state.updatePizzaByIdReducer);\r\n  const { updateloading } = updatePizzaState;\r\n  useEffect(() => {\r\n    if (pizza) {\r\n      if (pizza._id === match.params.pizzaId) {\r\n        setname(pizza.name);\r\n        setdescription(pizza.description);\r\n        setcategory(pizza.category);\r\n        setimage(pizza.image);\r\n        setsmallPrice(pizza.prices[0][\"small\"]);\r\n        setmediumPrice(pizza.prices[0][\"medium\"]);\r\n        setlargprice(pizza.prices[0][\"large\"]);\r\n      } else {\r\n        dispatch(getPizzaById(match.params.pizzaId));\r\n      }\r\n    } else {\r\n      dispatch(getPizzaById(match.params.pizzaId));\r\n    }\r\n  }, [pizza, dispatch, match.params.pizzaId]);\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n    const updatedPizza = {\r\n      _id: match.params.pizzaId,\r\n      name,\r\n      image,\r\n      description,\r\n      category,\r\n      prices: {\r\n        small: smallPrice,\r\n        medium: mediumPrice,\r\n        larg: largprice,\r\n      },\r\n    };\r\n    dispatch(updatePizza(updatedPizza));\r\n  };\r\n  return (\r\n    <div>\r\n      {updateloading && <Loader />}\r\n      {error && <Error error=\"add new pizza error\" />}\r\n      {/* {success && <Success success=\"Pizza Added Successfully\" />} */}\r\n      <Form onSubmit={submitForm} className=\"bg-light p-4\">\r\n        <Row className=\"mb-3\">\r\n          <Form.Group as={Col} controlId=\"formGridEmail\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={(e) => setname(e.target.value)}\r\n              placeholder=\"Enter email\"\r\n            />\r\n          </Form.Group>\r\n          <Row className=\"mb-3 mt-3\">\r\n            <Form.Group as={Col} controlId=\"formGridCity\">\r\n              <Form.Label>Small Price</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={smallPrice}\r\n                onChange={(e) => setsmallPrice(e.target.value)}\r\n                placeholder=\"Enter Small Price\"\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col} controlId=\"formGridState\">\r\n              <Form.Label>Medium Price</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={mediumPrice}\r\n                onChange={(e) => setmediumPrice(e.target.value)}\r\n                placeholder=\"Enter medium price\"\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col} controlId=\"formGridZip\">\r\n              <Form.Label>Larg Price</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={largprice}\r\n                onChange={(e) => setlargprice(e.target.value)}\r\n                placeholder=\"Enter larg price\"\r\n              />\r\n            </Form.Group>\r\n          </Row>\r\n          <Form.Group as={Col} controlId=\"formGridPassword\">\r\n            <Form.Label>Image</Form.Label>\r\n            <Form.Control\r\n              ttype=\"text\"\r\n              value={image}\r\n              onChange={(e) => setimage(e.target.value)}\r\n              placeholder=\"Add Image URL\"\r\n            />\r\n          </Form.Group>\r\n        </Row>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\r\n          <Form.Label>Description</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={description}\r\n            onChange={(e) => setdescription(e.target.value)}\r\n            placeholder=\"Enter Description\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formGridAddress2\">\r\n          <Form.Label>Category</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={category}\r\n            onChange={(e) => setcategory(e.target.value)}\r\n            placeholder=\"Enter Category\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Update Pizza\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPizza;\r\n\r\n\r\n","import React from 'react';\r\nimport { FaSpinner } from 'react-icons/fa';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"fixed top-0 left-0 w-full h-full flex items-center justify-center\">\r\n      <div className=\"absolute top-1/2 left-30 transform -translate-y-1/2\">\r\n        <FaSpinner  className=\"animate-spin text-6xl text-gray-600\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\nconst Error = ({ error }) => {\r\n  return <Alert variant=\"danger\">{error}</Alert>;\r\n};\r\n\r\nexport default Error;","import axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nexport const getAllPizzas = () => async (dispatch) => {\r\n  dispatch({ type: \"GET_PIZZAS_REQUEST\" });\r\n  try {\r\n    const response = await axios.get(\"/api/pizzas/getAllPizzas\");\r\n    // console.log(response.data);\r\n    dispatch({ type: \"GET_PIZZAS_SUCCESS\", payload: response.data });\r\n  } catch (err) {\r\n    dispatch({ type: \"GET_PIZZAS_FAIL\", payload: err });\r\n  }\r\n};\r\n\r\nexport const addPizza = (pizza) => async (dispatch) => {\r\n  dispatch({ type: \"ADD_PIZZAS_REQUEST\" });\r\n  try {\r\n    await axios.post(\"/api/pizzas/addpizza\", { pizza });\r\n    dispatch({ type: \"ADD_PIZZAS_SUCCESS\" });\r\n  } catch (err) {\r\n    dispatch({ type: \"ADD_PIZZAS_FAIL\", payload: err });\r\n  }\r\n};\r\n\r\nexport const getPizzaById = (pizzaId) => async (dispatch) => {\r\n  dispatch({ type: \"GET_PIZZABYID_REQUEST\" });\r\n  try {\r\n    const response = await axios.post(\"/api/pizzas/getpizzabyid\", { pizzaId });\r\n    dispatch({ type: \"GET_PIZZABYID_SUCCESS\", payload: response.data });\r\n  } catch (err) {\r\n    dispatch({ type: \"GET_PIZZABYID_FAIL\", payload: err });\r\n  }\r\n};\r\nexport const updatePizza = (updatedPizza) => async (dispatch) => {\r\n  dispatch({ type: \"UPDATE_PIZZABYID_REQUEST\" });\r\n  try {\r\n    const response = await axios.post(\"/api/pizzas/updatepizza\", {\r\n      updatedPizza,\r\n    });\r\n    dispatch({ type: \"UPDATE_PIZZABYID_SUCCESS\", payload: response.data });\r\n    window.location.href = \"/admin/pizzalist\";\r\n  } catch (err) {\r\n    dispatch({ type: \"UPDATE_PIZZABYID_FAIL\", payload: err });\r\n  }\r\n};\r\n\r\nexport const deletePizza = (pizzaId) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"/api/pizzas/deletepizza\", { pizzaId });\r\n    swal(\"Pizza Deleted Succss!\", \"success\");\r\n    window.location.href = \"/admin/pizzalist\";\r\n    // console.log(res);\r\n  } catch (error) {\r\n    swal(\"Errro While Deleteing Pizza\");\r\n  }\r\n};\r\n\r\nexport const filterPizza = (searchkey, category) => async (dispatch) => {\r\n  let filterdPizza;\r\n  dispatch({ type: \"GET_PIZZAS_REQUEST\" });\r\n  try {\r\n    const res = await axios.get(\"/api/pizzas/getAllPizzas\");\r\n    filterdPizza = res.data.filter((pizza) =>\r\n      pizza.name.toLowerCase().includes(searchkey)\r\n    );\r\n    if (category !== \"all\") {\r\n      filterdPizza = res.data.filter(\r\n        (pizza) => pizza.category.toLowerCase() === category\r\n      );\r\n    }\r\n    dispatch({ type: \"GET_PIZZAS_SUCCESS\", payload: filterdPizza });\r\n  } catch (error) {\r\n    dispatch({ type: \"GET_PIZZAS_FAIL\", payload: error });\r\n  }\r\n};"],"names":["match","useState","name","setname","smallPrice","setsmallPrice","largprice","setlargprice","mediumPrice","setmediumPrice","image","setimage","description","setdescription","category","setcategory","dispatch","useDispatch","getPizzaByState","useSelector","state","getPizzaByIdReducer","error","pizza","updateloading","updatePizzaByIdReducer","useEffect","_id","params","pizzaId","prices","getPizzaById","onSubmit","e","preventDefault","updatedPizza","small","medium","larg","updatePizza","className","as","Col","controlId","type","value","onChange","target","placeholder","ttype","variant","getAllPizzas","axios","response","payload","data","addPizza","window","location","href","deletePizza","swal","filterPizza","searchkey","res","filterdPizza","filter","toLowerCase","includes"],"sourceRoot":""}