{"version":3,"file":"static/js/8391.358518a7.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/js/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        requestAnimationFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            sync.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                sync.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            sync.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            sync.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            sync.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.2.4\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { sync, cancelSync } from '../../frameloop/index.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n        now: () => performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","import { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nfunction calculateDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration;\n}\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calculateDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = timestamp - startTime;\n        }\n        // Rebase on delay\n        currentTime = Math.max(currentTime - delay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = currentIteration % 2;\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            const p = currentTime >= totalDuration\n                ? repeatType === \"reverse\" && iterationIsOdd\n                    ? 0\n                    : 1\n                : clamp(0, 1, iterationProgress);\n            elapsed = p * resolvedDuration;\n        }\n        const state = frameGenerator.next(elapsed);\n        let { value, done } = state;\n        if (onUpdate) {\n            onUpdate(mapNumbersToKeyframes ? mapNumbersToKeyframes(value) : value);\n        }\n        if (calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (isAnimationFinished) {\n            playState = \"finished\";\n            onComplete && onComplete();\n            animationDriver && animationDriver.stop();\n        }\n        return state;\n    };\n    const play = () => {\n        animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        playState = \"running\";\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime) {\n            // TODO When implementing play/pause, check WAAPI\n            // logic around finished animations\n            startTime = now;\n        }\n        holdTime = null;\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        get currentTime() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set currentTime(newTime) {\n            if (holdTime !== null || !animationDriver) {\n                holdTime = 0;\n            }\n            else {\n                startTime =\n                    animationDriver.now() - secondsToMilliseconds(newTime);\n            }\n        },\n        stop: () => {\n            onStop && onStop();\n            animationDriver && animationDriver.stop();\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set currentTime(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { animateValue } from './js/index.mjs';\n\nfunction createInstantAnimation({ keyframes, delay: delayBy, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        return {\n            stop: () => { },\n            currentTime: 0,\n        };\n    };\n    return delayBy\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: delayBy,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { warning } from '../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\nimport { animateValue } from './js/index.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                sync.update(() => onDragStart(event, info));\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            sync.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        sync.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    sync.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","class GroupPlaybackControls {\n    constructor(animations) {\n        this.animations = animations.filter(Boolean);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    get currentTime() {\n        return this.animations[0].currentTime;\n    }\n    /**\n     * currentTime assignment could reasonably run every frame, so\n     * we iterate using a normal loop to avoid function creation.\n     */\n    set currentTime(time) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i].currentTime = time;\n        }\n    }\n    stop() {\n        this.animations.forEach((controls) => controls.stop());\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !((isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { GroupPlaybackControls } from './GroupPlaybackControls.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return value.animation || new GroupPlaybackControls([]);\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.2.4\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.2.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["_superPropBase","object","property","Object","prototype","hasOwnProperty","call","getPrototypeOf","_get","Reflect","get","bind","target","receiver","base","desc","getOwnPropertyDescriptor","arguments","length","value","apply","this","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","ref","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","initial","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","key","isEnabled","useConstant","init","useRef","current","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","id","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","useInsertionEffect","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","i","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","values","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","transformers","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","frameData","delta","timestamp","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","buffer","add","push","cancel","index","splice","delete","process","createRenderStep","sync","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","requestAnimationFrame","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","FocusGesture","isFocusVisible","matches","onFocus","onBlur","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","startObserver","hasOptionsChanged","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","isZeroValueString","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","c","numSubscriptions","velocityPerSecond","velocity","frameDuration","isFloat","isNaN","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","owner","subscription","on","unsubscribe","read","getSize","stop","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","Promise","resolve","animationStart","then","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","cubicBezierAsString","d","supportedWaapiEasing","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","easing","featureTests","waapi","Element","results","supports","mirrorEasing","reverseEasing","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","keyframes","duration","keyframeValues","times","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","now","performance","types","decay","tween","animateValue","animationDriver","mapNumbersToKeyframes","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","generatorFactory","mirroredGenerator","generator","playState","holdTime","startTime","calculateDuration","resolvedDuration","Infinity","totalDuration","currentTime","tick","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","play","newTime","sample","acceleratedValues","requiresPregeneratedKeyframes","valueName","createAcceleratedAnimation","sampleAnimation","pregeneratedKeyframes","keyframeOptions","iterations","direction","animateStyle","onfinish","getFinalKeyframe","setWithVelocity","createInstantAnimation","delayBy","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","isZero","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","createMotionValueAnimation","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","willChange","animations","animationTypeState","getState","shouldBlockAnimation","appearId","shouldReduceMotion","remove","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance2D","xDelta","yDelta","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","DragGesture","removeGroupControls","controls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","parseCSSVariable","exec","getVariableValue","depth","fallback","getComputedStyle","getPropertyValue","resolveCSSVariables","obj","TypeError","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","useId","usePresence","applyTo","boxShadow","GroupPlaybackControls","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","timeout","checkElapsed","record","data","MotionDebug","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","args","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","preRender","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","searchNode","querySelector","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","ProjectionNode","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parseDomVariant","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","baseConfig","createDomMotionConfig"],"sourceRoot":""}