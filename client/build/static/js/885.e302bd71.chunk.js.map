{"version":3,"file":"static/js/885.e302bd71.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@kurkle/color/dist/color.esm.js","../node_modules/chart.js/src/helpers/helpers.core.ts","../node_modules/chart.js/src/helpers/helpers.math.ts","../node_modules/chart.js/src/helpers/helpers.collection.ts","../node_modules/chart.js/src/helpers/helpers.extras.ts","../node_modules/chart.js/src/helpers/helpers.easing.ts","../node_modules/chart.js/src/helpers/helpers.color.ts","../node_modules/chart.js/src/core/core.animations.defaults.js","../node_modules/chart.js/src/helpers/helpers.intl.ts","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/chart.js/src/core/core.layouts.defaults.js","../node_modules/chart.js/src/core/core.scale.defaults.js","../node_modules/chart.js/src/helpers/helpers.canvas.ts","../node_modules/chart.js/src/helpers/helpers.options.ts","../node_modules/chart.js/src/helpers/helpers.config.ts","../node_modules/chart.js/src/helpers/helpers.curve.ts","../node_modules/chart.js/src/helpers/helpers.dom.ts","../node_modules/chart.js/src/helpers/helpers.interpolation.ts","../node_modules/chart.js/src/helpers/helpers.rtl.ts","../node_modules/chart.js/src/helpers/helpers.segment.js","../node_modules/chart.js/src/core/core.animator.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.bubble.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/controllers/controller.polarArea.js","../node_modules/chart.js/src/controllers/controller.pie.js","../node_modules/chart.js/src/controllers/controller.radar.js","../node_modules/chart.js/src/controllers/controller.scatter.js","../node_modules/chart.js/src/core/core.adapters.ts","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/platform/platform.base.js","../node_modules/chart.js/src/platform/platform.basic.js","../node_modules/chart.js/src/platform/platform.dom.js","../node_modules/chart.js/src/platform/index.js","../node_modules/chart.js/src/core/core.element.ts","../node_modules/chart.js/src/core/core.scale.autoskip.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.typedRegistry.js","../node_modules/chart.js/src/core/core.registry.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.config.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/elements/element.arc.ts","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.ts","../node_modules/chart.js/src/elements/element.bar.js","../node_modules/chart.js/src/plugins/plugin.colors.ts","../node_modules/chart.js/src/plugins/plugin.decimation.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.options.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js","../node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.target.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js","../node_modules/chart.js/src/plugins/plugin.filler/index.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/chart.js/src/plugins/plugin.subtitle.js","../node_modules/chart.js/src/plugins/plugin.tooltip.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js","../node_modules/chart.js/src/scales/scale.timeseries.js","../node_modules/chart.js/src/index.ts","../node_modules/chart.js/auto/auto.js"],"sourcesContent":["import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || (elements && containsColorsDefinitions(elements)))) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n"],"names":["_superPropBase","object","property","Object","prototype","hasOwnProperty","call","getPrototypeOf","_get","Reflect","get","bind","target","receiver","base","desc","getOwnPropertyDescriptor","arguments","length","value","apply","this","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","i","rgb","rgb2hsl","hueValue","calln","Array","isArray","map","hsl2rgb","hue","hueParse","str","m","exec","p1","p2","hwb2rgb","hsv2rgb","names","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","nameParse","j","ok","nk","unpacked","keys","tkeys","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","rgbParse","Color","type","ret","len","hexParse","_rgb","_valid","obj","hslString","color","weight","w2","c1","c2","p","w1","t","rgb1","rgb2","interpolate","val","deg","rotate","noop","uid","id","isNullOrUndef","toString","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","current","merger","mergeIf","_mergerIf","keyResolvers","o","y","_getKeyResolver","parts","split","part","push","_splitKey","resolveObjectKey","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","isNaN","_setMinAndMaxByKey","array","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","getUserBounds","minDefined","maxDefined","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","saturate","darken","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","notation","chart","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","overrides","descriptors","getScope","node","root","scope","Defaults","constructor","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","_scriptable","startsWith","_indexable","_fallback","defaults","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","Ticks","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","_scopes","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_cacheable","_proxy","_context","_subProxy","_stack","setContext","isScriptable","getValue","Error","join","add","delete","needsSubResolver","createSubResolver","_resolveScriptable","isIndexable","arr","filter","resolver","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","readKey","prefix","resolveFallback","parent","addScopes","parentScopes","parentFallback","_rootScopes","allScopes","addScopesFromKey","_getTarget","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointsLen","pointAfter","monotoneCompute","pointBefore","valueAxis","iPixel","vPixel","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","slopeDelta","splineCurveMonotone","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","touches","offsetX","offsetY","box","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","prevValue","startBound","endBound","getSegment","inside","subStart","shouldStart","startIsBefore","shouldStop","endIsBefore","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","styleChanged","p0","p0DataIndex","p1DataIndex","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","interpolators","boolean","factor","c0","helpersColor","valid","mix","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","animator","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","otherValue","singleMode","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","defineProperty","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","curr","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","grouped","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_index_","_value_","BubbleController","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","circumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","abstract","_date","DateAdapterBase","init","formats","diff","startOf","endOf","members","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","layout","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refit","refitBoxes","setBoxDims","placeBoxes","userPadding","_layers","z","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","maxLabelDiagonal","numTicks","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","tickFont","fontString","nestedLabel","caches","widths","heights","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","lineCount","textOffset","tickAndPadding","hTickAndPadding","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","getResolver","subPrefixes","needContext","subResolver","resolverCache","hasFunction","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","Interaction","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","detached","_remove","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","invalidatePlugins","parseBorderRadius","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","forceOverride","_args","chartOptions","colorizer","cleanDecimatedDataset","cleanDecimatedData","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","maxAreaPoint","maxArea","nextA","bucketWidth","sampledIndex","endIndex","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","cursor","defaultColor","halfFontSize","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","titleBlock","createTitle","WeakMap","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","textColor","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks","generationOptions","dataRange","niceMin","niceMax","numSpaces","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","animate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","_parseOpts","parser","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","adapters","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"sourceRoot":""}