{"version":3,"file":"static/js/942.623b2a6f.chunk.js","mappings":"+KAKMA,EAAc,SAAH,GAA0C,IAApCC,EAAO,EAAPA,QAASC,EAAmB,EAAnBA,oBAC9B,GAAoCC,EAAAA,EAAAA,WAAS,GAAM,eAA5CC,EAAU,KAAEC,EAAa,KAmBhC,OACE,eAAIC,UAAU,OAAM,UAClB,iBAAKA,UAAU,YAAW,WACxB,eAAGA,UAAU,gBAAe,WAAC,4BAAQ,SAAa,KAAGL,EAAQM,SAC7D,0BAAG,4BAAQ,UAAc,KAAGN,EAAQO,UAEpC,0BAAG,4BAAQ,kBAAsB,KAAGP,EAAQQ,iBAC5C,0BAAG,4BAAQ,YAAgB,KAAGR,EAAQS,YACtC,0BAAG,4BAAQ,YAAgB,KAAGT,EAAQU,YACtC,0BACE,4BAAQ,mBAAuB,KAAGV,EAAQW,cAAgB,MAAQ,SAElEX,EAAQW,gBACR,oBACEN,UAAU,yEACVO,QAhCW,WACnBR,GAAc,GACdS,EAAAA,EAAAA,MACS,wCAAD,OAAyCb,EAAQc,KAAO,CAC5DH,eAAe,IAEhBI,MAAK,SAACC,GACLC,QAAQC,IAAI,mBAAoBF,EAASG,MACzCf,GAAc,GACdH,EAAoBD,EAAQc,IAC9B,IACCM,OAAM,SAACC,GACNJ,QAAQC,IAAI,gDAAiDG,GAC7DjB,GAAc,EAChB,GACJ,EAkBUkB,SAAUnB,EAAW,UAEpBA,GACC,iBAAME,UAAU,OAAM,UACpB,SAAC,MAAQ,CAACA,UAAU,gCAEpB,KAAK,uBAOrB,EAkDA,UAhDmB,WACjB,OAAgCH,EAAAA,EAAAA,UAAS,IAAG,eAArCqB,EAAQ,KAAEC,EAAW,MAE5BC,EAAAA,EAAAA,YAAU,WACRC,GACF,GAAG,IAEH,IAAMA,EAAgB,WACpBb,EAAAA,EAAAA,IACO,wCACJE,MAAK,SAACC,GACLQ,EAAYR,EAASG,KACvB,IACCC,OAAM,SAACC,GACNJ,QAAQC,IAAI,iDAAkDG,EAChE,GACJ,EAEMpB,EAAsB,SAAC0B,GAC3B,IAAMC,EAAkBL,EAASM,KAAI,SAAC7B,GACpC,OAAIA,EAAQc,MAAQa,GACX,kBAAK3B,GAAO,IAAEW,eAAe,IAE/BX,CACT,IACAwB,EAAYI,EACd,EAEA,OACE,iBAAKvB,UAAU,wBAAuB,WACpC,eAAIA,UAAU,0BAAyB,SAAC,6BACvCkB,EAASO,OAAS,GACjB,eAAIzB,UAAU,2BAA0B,SACrCkB,EAASM,KAAI,SAAC7B,GAAO,OACpB,SAACD,EAAW,CAEVC,QAASA,EACTC,oBAAqBA,GAFhBD,EAAQc,IAGb,OAIN,cAAGT,UAAU,gBAAe,SAAC,yCAIrC,C","sources":["Admin/ContactData.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { FaCheckCircle } from 'react-icons/fa';\r\nimport { FiLoader } from 'react-icons/fi';\r\n\r\nconst ContactItem = ({ contact, handleIssueResolved }) => {\r\n  const [isUpdating, setIsUpdating] = useState(false);\r\n\r\n  const resolveIssue = () => {\r\n    setIsUpdating(true);\r\n    axios\r\n      .patch(`http://localhost:8080/admin/contacts/${contact._id}`, {\r\n        issueResolved: true,\r\n      })\r\n      .then((response) => {\r\n        console.log('Contact updated:', response.data);\r\n        setIsUpdating(false);\r\n        handleIssueResolved(contact._id);\r\n      })\r\n      .catch((error) => {\r\n        console.log('An error occurred while updating the contact:', error);\r\n        setIsUpdating(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <li className=\"py-4\">\r\n      <div className=\"space-y-2\">\r\n        <p className=\"font-semibold\"><strong>Name</strong>: {contact.name}</p>\r\n        <p><strong>Email</strong>: {contact.email}</p>\r\n        \r\n        <p><strong>Mobile Number</strong>: {contact.mobileNumber}</p>\r\n        <p><strong>Subject</strong>: {contact.subject}</p>\r\n        <p><strong>Message</strong>: {contact.message}</p>\r\n        <p>\r\n          <strong>Issue Resolved</strong>: {contact.issueResolved ? 'Yes' : 'No'}\r\n        </p>\r\n        {!contact.issueResolved && (\r\n          <button\r\n            className=\"font-bold py-2 px-4 rounded bg-green-500 hover:bg-green-700 text-white\"\r\n            onClick={resolveIssue}\r\n            disabled={isUpdating}\r\n          >\r\n            {isUpdating ? (\r\n              <span className=\"mr-2\">\r\n                <FiLoader className=\"inline-block animate-spin\" />\r\n              </span>\r\n            ) : null}\r\n            Resolve Issue\r\n          </button>\r\n        )}\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst AdminPanel = () => {\r\n  const [contacts, setContacts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchContacts();\r\n  }, []);\r\n\r\n  const fetchContacts = () => {\r\n    axios\r\n      .get('http://localhost:8080/admin/contacts')\r\n      .then((response) => {\r\n        setContacts(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log('An error occurred while fetching the contacts:', error);\r\n      });\r\n  };\r\n\r\n  const handleIssueResolved = (contactId) => {\r\n    const updatedContacts = contacts.map((contact) => {\r\n      if (contact._id === contactId) {\r\n        return { ...contact, issueResolved: true };\r\n      }\r\n      return contact;\r\n    });\r\n    setContacts(updatedContacts);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Contact Form Submissions</h1>\r\n      {contacts.length > 0 ? (\r\n        <ul className=\"divide-y divide-gray-300\">\r\n          {contacts.map((contact) => (\r\n            <ContactItem\r\n              key={contact._id}\r\n              contact={contact}\r\n              handleIssueResolved={handleIssueResolved}\r\n            />\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p className=\"text-gray-500\">No contact form submissions found.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n"],"names":["ContactItem","contact","handleIssueResolved","useState","isUpdating","setIsUpdating","className","name","email","mobileNumber","subject","message","issueResolved","onClick","axios","_id","then","response","console","log","data","catch","error","disabled","contacts","setContacts","useEffect","fetchContacts","contactId","updatedContacts","map","length"],"sourceRoot":""}