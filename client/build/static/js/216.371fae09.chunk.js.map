{"version":3,"file":"static/js/216.371fae09.chunk.js","mappings":"8HAUA,IARc,SAAH,GAAmB,IAAbA,EAAK,EAALA,MACf,OACE,gBAAKC,UAAU,2EAA0E,UACvF,iBAAMA,UAAU,kBAAiB,SAAED,KAGzC,C,4CCEA,IARe,WACb,OACE,gBAAKC,UAAU,mCAAkC,UAC/C,gBAAKA,UAAU,+EAGrB,C,kHCNaC,EAAa,SAACC,EAAOC,GAAQ,gDAAK,WAAOC,EAAUC,GAAQ,8EAGpB,OAFlDD,EAAS,CAAEE,KAAM,wBACXC,EAAcF,IAAWG,iBAAiBD,YAC1CE,EAAYJ,IAAWK,YAAYD,UAAU,EAAD,gBAEzBE,EAAAA,EAAAA,KAAW,yBAA0B,CAC1DT,MAAAA,EACAC,SAAAA,EACAI,YAAAA,EACAE,UAAAA,IACC,KAAD,EACsB,MANV,OAMDG,OACXR,EAAS,CAAEE,KAAM,wBAEjBF,EAAS,CAAEE,KAAM,qBAClB,kDAEDF,EAAS,CAAEE,KAAM,qBACjBO,QAAQC,IAAI,EAAD,IAAQ,0DAEtB,qDApByC,EAoBzC,EAOYC,EAAgB,WAAH,gDAAS,WAAOX,EAAUC,GAAQ,8EAIvD,OAHGE,EAAcF,IAAWG,iBAAiBD,YAChDH,EAAS,CACPE,KAAM,uBACL,kBAEsBK,EAAAA,EAAAA,KAAW,2BAA4B,CAC5DK,OAAQT,EAAYU,QACnB,KAAD,EAFIC,EAAQ,OAGdL,QAAQC,IAAII,GACZd,EAAS,CAAEE,KAAM,qBAAsBa,QAASD,EAASE,OAAQ,kDAEjEhB,EAAS,CAAEE,KAAM,kBAAmBa,QAAQ,EAAD,KAAW,0DAEzD,qDAdyB,EAczB,C,6FCiBD,UArDoB,WAClB,IAAME,GAAaC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,oBAAoB,IAC5DC,EAA2BJ,EAA3BI,QAAS1B,EAAkBsB,EAAlBtB,MAAO2B,EAAWL,EAAXK,OAClBtB,GAAWuB,EAAAA,EAAAA,MAIjB,OAHAC,EAAAA,EAAAA,YAAU,WACRxB,GAASW,EAAAA,EAAAA,MACX,GAAG,CAACX,KAEF,+BACA,iBAAKJ,UAAU,2BAA0B,WACvC,eAAIA,UAAU,sCAAqC,SAAC,gBAEnDyB,IAAW,SAAC,IAAM,IAClB1B,IAAS,SAAC,IAAK,CAACA,MAAM,0BAEtB2B,GACCA,EAAOG,KAAI,SAACC,GAAK,OACf,gBAEE9B,UAAU,4CAA2C,UAErD,iBAAKA,UAAU,wCAAuC,WACpD,4BACE,eAAIA,UAAU,gBAAe,SAAC,WAC7B8B,EAAMC,WAAWF,KAAI,SAACG,GAAI,OACzB,eAAmBhC,UAAU,OAAM,UAChCgC,EAAKC,KAAK,KAAGD,EAAKE,QAAQ,OAAKF,EAAKG,SAAS,MAAIH,EAAKI,QADjDJ,EAAKC,KAET,QAIR,4BACE,eAAIjC,UAAU,gBAAe,SAAC,cAC9B,eAAGA,UAAU,OAAM,UAAC,WAAS8B,EAAMO,gBAAgBC,WACnD,eAAGtC,UAAU,OAAM,UAAC,SAAO8B,EAAMO,gBAAgBE,SACjD,eAAGvC,UAAU,OAAM,UAAC,YAAU8B,EAAMO,gBAAgBG,YACpD,yBAAG,YAAUV,EAAMO,gBAAgBI,eAGrC,4BACE,eAAIzC,UAAU,gBAAe,SAAC,iBAC9B,eAAGA,UAAU,OAAM,UAAC,iBAAe8B,EAAMY,gBACzC,eAAG1C,UAAU,OAAM,UAAC,mBAAiB8B,EAAMa,kBAC3C,yBAAG,aAAWb,EAAMc,cAzBnBd,EAAMc,IA4BP,QAMhB,C","sources":["Alerts/Error.jsx","Alerts/Loader.js","action/orderAction.js","components/Users/UserOrders.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nconst Error = ({ error }) => {\r\n  return (\r\n    <div className=\"bg-red-100 border border-red-500 text-red-700 px-4 py-3 rounded relative\">\r\n      <span className=\"block sm:inline\">{error}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React from \"react\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"flex items-center justify-center\">\r\n      <div className=\"border-t-4 border-b-4 border-blue-500 rounded-full w-12 h-12 animate-spin\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import axios from \"axios\";\r\n\r\nexport const placeOrder = (token, subTotal) => async (dispatch, getState) => {\r\n  dispatch({ type: \"PLACE_ORDER_REQUEST\" });\r\n  const currentUser = getState().loginUserReducer.currentUser;\r\n  const cartItems = getState().cartReducer.cartItems;\r\n  try {\r\n    const response = await axios.post(\"/api/orders/placeorder\", {\r\n      token,\r\n      subTotal,\r\n      currentUser,\r\n      cartItems,\r\n    });\r\n    if (response.status === 200) {\r\n      dispatch({ type: \"PLACE_ORDER_SUCCESS\" });\r\n    } else {\r\n      dispatch({ type: \"PLACE_ORDER_FAIL\" });\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: \"PLACE_ORDER_FAIL\" });\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const getUserOrders = () => async (dispatch, getState) => {\r\n  const currentUser = getState().loginUserReducer.currentUser;\r\n  dispatch({\r\n    type: \"USER_ORDER_REQUEST\",\r\n  });\r\n  try {\r\n    const response = await axios.post(\"/api/orders/getuserorder\", {\r\n      userid: currentUser.email,\r\n    });\r\n    console.log(response);\r\n    dispatch({ type: \"USER_ORDER_SUCCESS\", payload: response.data });\r\n  } catch (error) {\r\n    dispatch({ type: \"USER_ORDER_FAIL\", payload: error });\r\n  }\r\n};\r\nexport const getAllOrders = () => async (dispatch, getState) => {\r\n  // const currentUser = getState().loginUserReducer.currentUser;\r\n  dispatch({\r\n    type: \"ALL_ORDER_REQUEST\",\r\n  });\r\n  try {\r\n    const response = await axios.get(\"/api/orders/alluserorder\");\r\n    dispatch({ type: \"ALL_ORDER_SUCCESS\", payload: response.data });\r\n  } catch (error) {\r\n    dispatch({ type: \"ALL_ORDER_FAIL\", payload: error });\r\n  }\r\n};\r\n\r\nexport const deliverOrder = (orderid) => async (dispatch, getState) => {\r\n  // const currentUser = getState().loginUserReducer.currentUser;\r\n  dispatch({\r\n    type: \"GET_ALL_ORDER_REQUEST\",\r\n  });\r\n  try {\r\n    await axios.post(\"/api/orders/deliverorder\", { orderid });\r\n    alert(\"Deliverd Success\");\r\n    const orders = await axios.get(\"/api/orders/alluserorder\");\r\n    dispatch({ type: \"GET_ALL_ORDER_SUCCESS\", payload: orders.data });\r\n    window.location.href = \"/admin/orderlist\";\r\n  } catch (error) {\r\n    dispatch({ type: \"GET_ALL_ORDER_FAIL\", payload: error });\r\n  }\r\n};\r\n\r\n","import React, { useEffect } from \"react\";\r\nimport { getUserOrders } from \"../../action/orderAction\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Loader from \"../../Alerts/Loader\";\r\nimport Error from \"../../Alerts/Error\";\r\n\r\nconst OrderScreen = () => {\r\n  const orderState = useSelector((state) => state.getUserOrdersReducer);\r\n  const { loading, error, orders } = orderState;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getUserOrders());\r\n  }, [dispatch]);\r\n  return (\r\n    <>\r\n    <div className=\"bg-gray-100 min-h-screen\">\r\n      <h1 className=\"text-center text-3xl font-bold mb-8\">Your Orders</h1>\r\n\r\n      {loading && <Loader />}\r\n      {error && <Error error=\"Something went wrong.\" />}\r\n\r\n      {orders &&\r\n        orders.map((order) => (\r\n          <div\r\n            key={order._id}\r\n            className=\"container border p-4 bg-white shadow mb-8\"\r\n          >\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n              <div>\r\n                <h4 className=\"font-semibold\">Items:</h4>\r\n                {order.orderItems.map((item) => (\r\n                  <p key={item.name} className=\"mb-1\">\r\n                    {item.name} [{item.variant}] * {item.quantity} = {item.price}\r\n                  </p>\r\n                ))}\r\n              </div>\r\n\r\n              <div>\r\n                <h4 className=\"font-semibold\">Address:</h4>\r\n                <p className=\"mb-1\">Street: {order.shippingAddress.street}</p>\r\n                <p className=\"mb-1\">City: {order.shippingAddress.city}</p>\r\n                <p className=\"mb-1\">PinCode: {order.shippingAddress.pinCode}</p>\r\n                <p>Country: {order.shippingAddress.country}</p>\r\n              </div>\r\n\r\n              <div>\r\n                <h4 className=\"font-semibold\">Order Info:</h4>\r\n                <p className=\"mb-1\">Order Amount: {order.orderAmount}</p>\r\n                <p className=\"mb-1\">Transaction ID: {order.transactionId}</p>\r\n                <p>Order ID: {order._id}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n    </div>\r\n    </>\r\n      \r\n  );\r\n};\r\nexport default OrderScreen;"],"names":["error","className","placeOrder","token","subTotal","dispatch","getState","type","currentUser","loginUserReducer","cartItems","cartReducer","axios","status","console","log","getUserOrders","userid","email","response","payload","data","orderState","useSelector","state","getUserOrdersReducer","loading","orders","useDispatch","useEffect","map","order","orderItems","item","name","variant","quantity","price","shippingAddress","street","city","pinCode","country","orderAmount","transactionId","_id"],"sourceRoot":""}