{"version":3,"file":"static/js/6246.43c685cb.chunk.js","mappings":"wQAIaA,EAAe,SAACC,GAAI,gDAAK,WAAOC,GAAQ,sEACP,OAA5CA,EAAS,CAAEC,KAAM,0BAA2B,kBAGpCC,EAAAA,EAAAA,KAAW,sBAAuBH,GAAM,KAAD,EAC7CC,EAAS,CAAEC,KAAM,0BAA2B,gDAExC,KAAME,UAAY,KAAMA,SAASC,KACnCJ,EAAS,CAAEC,KAAM,qBAAsBI,QAAS,KAAMF,SAASC,OAE/DJ,EAAS,CAAEC,KAAM,qBAAsBI,QAAS,yCACjD,yDAEJ,mDAbgC,EAahC,EAeYC,EAAa,WAAH,OAAS,SAACN,GAC/BO,aAAaC,WAAW,eACxBC,OAAOC,SAASC,KAAO,QACzB,CAAE,EAEWC,EAAc,WAAH,gDAAS,WAAOZ,GAAQ,4EACN,OAAxCA,EAAS,CAAEC,KAAM,sBAAuB,kBAEfC,EAAAA,EAAAA,IAAU,0BAA0B,KAAD,EAApDC,EAAQ,OAEdH,EAAS,CAAEC,KAAM,oBAAqBI,QAASF,EAASC,OAAQ,gDAEhEJ,EAAS,CAAEC,KAAM,iBAAkBI,QAAQ,EAAD,KAAS,yDAEtD,mDATuB,EASvB,EAEYQ,EAAa,SAACC,GAAM,gDAAK,WAAOd,GAAQ,+FAE3CE,EAAAA,EAAAA,KAAW,wBAAyB,CAAEY,OAAAA,IAAU,KAAD,EACrDC,IAAK,uBAAwB,WAC7BN,OAAOC,SAASM,SAChB,gDAEAD,IAAK,8BAA8B,yDAEtC,mDATgC,EAShC,C,+OCqHD,EAvK0B,SAACE,GACzB,OAAgCC,EAAAA,EAAAA,UAAS,IAAG,eAArCC,EAAQ,KAAEC,EAAW,KAC5B,GAA8CF,EAAAA,EAAAA,UAAS,IAAG,eAAnDG,EAAe,KAAEC,EAAkB,KAC1C,GAAsBJ,EAAAA,EAAAA,UAAS,IAAG,eAA3BK,EAAG,KAAEC,EAAM,KACZC,GAAWC,EAAAA,EAAAA,MAcXC,EAAgB,yCAAG,WAAOC,GAAC,8EAEZ,GADbC,EAAiD,wDACvDD,EAAEE,iBAEGP,EAAI,CAAD,eACyB,OAA/BQ,EAAAA,GAAAA,MAAY,mBAAmB,6BAI5BZ,EAAS,CAAD,eACyB,OAApCY,EAAAA,GAAAA,MAAY,wBAAwB,6BAIjCV,EAAgB,CAAD,gBAC0B,OAA5CU,EAAAA,GAAAA,MAAY,gCAAgC,8BAI1CZ,IAAaE,EAAe,iBACQ,OAAtCU,EAAAA,GAAAA,MAAY,0BAA0B,2BAQvC,OAJKC,EAAW,CACfC,MAAOhB,EAAMgB,MACbC,QAASX,EACTJ,SAAUA,GACV,EAAD,kBAGwBjB,EAAAA,EAAAA,KAAW2B,EAAQG,EAAU,CAClDG,QAAS,CACP,eAAgB,sBAEjB,KAAD,GAE+B,YANnB,OAMD/B,KAAKgC,YAChBL,EAAAA,GAAAA,QAAc,iCACdM,YAAW,WACTZ,EAAS,SACX,GAAG,OAEHM,EAAAA,GAAAA,MAAY,2BACb,mDAEDA,EAAAA,GAAAA,MAAY,2BAA2B,2DAE1C,gBAhDqB,sCAmDhBO,EAAmBC,IAAOpB,GAAUqB,MAE1C,OACE,iBAAKC,UAAU,0DAAyD,WACtE,eAAIA,UAAU,0BAAyB,SAAC,oBACxC,kBAAMC,SAAUf,EAAiB,WAC/B,iBAAKc,UAAU,OAAM,WACnB,kBAAOE,QAAQ,MAAMF,UAAU,uBAAsB,SAAC,SAGtD,kBACExC,KAAK,OACL2C,GAAG,MACHC,KAAK,MACLJ,UAAU,qDACVK,MAAOvB,EACPwB,SAxEc,SAACnB,GACvBJ,EAAOI,EAAEoB,OAAOF,MAClB,QAyEM,iBAAKL,UAAU,OAAM,WACnB,kBAAOE,QAAQ,WAAWF,UAAU,uBAAsB,SAAC,kBAG3D,kBACExC,KAAK,WACL2C,GAAG,WACHC,KAAK,WACLJ,UAAU,qDACVK,MAAO3B,EACP4B,SA7FmB,SAACnB,GAC5BR,EAAYQ,EAAEoB,OAAOF,MACvB,QA8FM,iBAAKL,UAAU,OAAM,WACnB,kBAAOE,QAAQ,kBAAkBF,UAAU,uBAAsB,SAAC,sBAGlE,kBACExC,KAAK,WACL2C,GAAG,kBACHC,KAAK,kBACLJ,UAAU,qDACVK,MAAOzB,EACP0B,SAtG0B,SAACnB,GACnCN,EAAmBM,EAAEoB,OAAOF,MAC9B,QAuGM,iBAAKL,UAAU,OAAM,WACnB,iBAAKA,UAAU,yBAAwB,WACrC,iBACEA,UAAS,0BAAyC,IAApBtB,EAAS8B,OACnC,WACqB,IAArBX,EACE,YACAA,GAAoB,EAClB,aACAA,GAAoB,EAClB,WACA,cAGZ,iBAAMG,UAAU,UAAS,SACF,IAApBtB,EAAS8B,OACN,oBACqB,IAArBX,EACE,SACAA,GAAoB,EAClB,SACAA,GAAoB,EAClB,OACA,aAGd,gBAAKG,UAAU,sCAAqC,UAClD,gBACEA,UAAS,iBAAgC,IAApBtB,EAAS8B,OAC1B,kBACqB,IAArBX,EACE,sBACAA,GAAoB,EAClB,sBACAA,GAAoB,EAClB,oBACA,4BAKhB,mBACErC,KAAK,SACLwC,UAAU,kFAAiF,SAC5F,uBAIH,SAAC,KAAc,MAGrB,ECFA,EA7JuB,WACnB,IAAMS,GAAWC,EAAAA,EAAAA,UACTC,GAAoBC,EAAAA,EAAAA,MAApBD,gBACR,GAA0BlC,EAAAA,EAAAA,UAAS,IAAG,eAA/Be,EAAK,KAAEqB,EAAQ,KACtB,GAAiCpC,EAAAA,EAAAA,WAAS,GAAK,eAAxCqC,EAAO,KAAEC,EAAa,KAC7B,GAA8BtC,EAAAA,EAAAA,WAAS,GAAM,eAAtCuC,EAAO,KAAEC,EAAU,KAEpBC,GAAmBC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,gBAAgB,IAChEC,GAAgBH,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMG,kBAAkB,IAC7DC,EAAgBN,EAAhBM,YAEFC,EADYH,EAAVI,MACwBC,MAAK,SAACrE,GAAI,OAAKA,EAAKkC,QAAUA,CAAK,IAE7DjC,GAAWqE,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACNtE,GAASY,EAAAA,EAAAA,MACb,GAAG,CAACZ,IAkCJ,OACI,iCACI,SAACuE,EAAA,EAAM,WACH,2BAAO,sBAINnB,GAAoBa,GAqEf,iCAEE,gBAAKxB,UAAU,4DAA2D,UACtE,iBAAKA,UAAU,kBAAiB,WAC5B,iBAAKA,UAAU,iDAAgD,WAC3D,iBAAKA,UAAU,wCAAuC,WAClD,SAAC,MAAa,CAACA,UAAU,gCACzB,cAAGA,UAAU,qCAAoC,SAAC,yDAItD,UAAC,KAAI,CACD+B,GAAG,QACH/B,UAAU,4IAA2I,WAErJ,SAAC,MAAW,CAACA,UAAU,SAAS,cAIxC,cAAGA,UAAU,oCAAmC,SAAC,mDAInD,QA5FqB,0BAAK,gBAAKA,UAAU,4DAA2D,UAC9G,iBAAKA,UAAU,kBAAiB,UAExBc,GAAU,2BAAK,KAAC,kBACZd,UAAU,iDACVC,SA3CP,SAACd,GAClB8B,GAAW,GAEX9B,EAAEE,iBAEF5B,EAAAA,EAAAA,KAHuD,wDAIrC,CACV+B,MAAOA,IAEVwC,MAAK,SAACC,GACHC,QAAQC,IAAIF,EAAItE,MACY,YAAxBsE,EAAItE,KAAKgC,YACTsB,GAAW,GACX3B,EAAAA,GAAAA,QAAc,gCAAD,OAAiCE,IAE9CI,YAAW,WACPmB,GAAc,EAClB,GAAG,QAEHE,GAAW,GACXmB,MAAMH,EAAItE,KAAK0E,SAEvB,IACCC,OAAM,SAACC,GACJtB,GAAW,GACXiB,QAAQC,IAAII,EAChB,GAER,EAemD,WAEvB,iBAAKvC,UAAU,OAAM,WACjB,kBACIA,UAAU,6CACVE,QAAQ,QAAO,SAClB,mBAGD,kBACIsC,UAAQ,EACRxC,UAAU,6HACVG,GAAG,QACH3C,KAAK,QACLiF,YAAY,2BACZpC,MAAOb,EACPc,SAAU,SAACnB,GAAC,OAAK0B,EAAS1B,EAAEoB,OAAOF,MAAM,EACzCqC,IAAKjC,IAERgB,GACG,cAAGzB,UAAU,8BAA6B,SAAC,0CAI3C,cAAGA,UAAU,4BAA2B,SAAC,2BAK7C,cAAGA,UAAU,wBAAuB,SAAC,sDAKzC,iBAAKA,UAAU,mCAAkC,UAC5CgB,GACG,iBAAKhB,UAAU,wCAAuC,WACtD,SAAC,MAAQ,CAACA,UAAU,+BAA+B,qBAKnD,mBACIA,UAAU,+GACVxC,KAAK,SAAQ,SAChB,cAIL,SAAC,KAAI,CACDuE,GAAG,SACH/B,UAAU,wIAAuI,SACpJ,mBAIO,2BAAK,KAAC,SAAC2C,EAAa,CAACnD,MAAOiB,EAASmC,QAAQvC,QAAS,QAE1E,cAAGL,UAAU,oCAAmC,SAAC,sDA+B7D,SAAC,KAAc,MAG3B,C","sources":["action/userAction.js","components/Users/ResetPassword.jsx","components/Users/ForgotPassword.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\n\r\n\r\nexport const registerUser = (user) => async (dispatch) => {\r\n  dispatch({ type: \"USER_REGISTER_REQUEST\" });\r\n\r\n  try {\r\n    await axios.post(\"/api/users/register\", user);\r\n    dispatch({ type: \"USER_REGISTER_SUCCESS\" });\r\n  } catch (error) {\r\n    if (error.response && error.response.data) {\r\n      dispatch({ type: \"USER_REGISTER_FAIL\", payload: error.response.data });\r\n    } else {\r\n      dispatch({ type: \"USER_REGISTER_FAIL\", payload: \"An error occurred. Please try again.\" });\r\n    }\r\n  }\r\n};\r\n\r\nexport const loginUser = (user) => async (dispatch) => {\r\n  dispatch({ type: \"USER_LOGIN_REQUEST\" });\r\n  try {\r\n    const response = await axios.post(\"/api/users/login\", user);\r\n    console.log(response);\r\n    dispatch({ type: \"USER_LOGIN_SUCCESS\", payload: response.data });\r\n    localStorage.setItem(\"currentUser\", JSON.stringify(response.data));\r\n    window.location.href = \"/\";\r\n  } catch (error) {\r\n    dispatch({ type: \"USER_LOGIN_FAIL\", payload: error });\r\n  }\r\n};\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n  localStorage.removeItem(\"currentUser\");\r\n  window.location.href = \"/login\";\r\n};\r\n\r\nexport const getAllUsers = () => async (dispatch) => {\r\n  dispatch({ type: \"GET_USERS_REQUEST\" });\r\n  try {\r\n    const response = await axios.get(\"/api/users/getallusers\");\r\n    // console.log(response.data);\r\n    dispatch({ type: \"GET_USERS_SUCCESS\", payload: response.data });\r\n  } catch (err) {\r\n    dispatch({ type: \"GET_USERS_FAIL\", payload: err });\r\n  }\r\n};\r\n\r\nexport const deleteUser = (userid) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"/api/users/deleteuser\", { userid });\r\n    swal(\"User Deleted Succss!\", \"success\");\r\n    window.location.reload();\r\n    // console.log(res);\r\n  } catch (error) {\r\n    swal(\"Errro While Deleteing User\");\r\n  }\r\n};","import React, { useState } from 'react';\r\nimport zxcvbn from 'zxcvbn';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst PasswordResetForm = (props) => {\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [otp, setOtp] = useState('');\r\n  const Navigate = useNavigate();\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleConfirmPasswordChange = (e) => {\r\n    setConfirmPassword(e.target.value);\r\n  };\r\n\r\n  const handleOtpChange = (e) => {\r\n    setOtp(e.target.value);\r\n  };\r\n\r\n  \r\n  const handleFormSubmit = async (e) => {\r\n    const apiUrl = process.env.NODE_ENV === 'production' ? 'https://pizzaking.cyclic.app/api/users/changepassword' : 'http://localhost:8080/api/users/changepassword';\r\n    e.preventDefault();\r\n  \r\n    if (!otp) {\r\n      toast.error('OTP is required');\r\n      return;\r\n    }\r\n  \r\n    if (!password) {\r\n      toast.error('Password is required');\r\n      return;\r\n    }\r\n  \r\n    if (!confirmPassword) {\r\n      toast.error('Confirm Password is required');\r\n      return;\r\n    }\r\n  \r\n    if (password !== confirmPassword) {\r\n      toast.error('Passwords do not match');\r\n      return;\r\n    }\r\n  \r\n    const formData = {\r\n      email: props.email,\r\n      otpCode: otp,\r\n      password: password,\r\n    };\r\n  \r\n    try {\r\n      const response = await axios.post(apiUrl, formData, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n  \r\n      if (response.data.statusText === 'success') {\r\n        toast.success('Password updated successfully');\r\n        setTimeout(() => {\r\n          Navigate('/login');\r\n        }, 1500);\r\n      } else {\r\n        toast.error('Error updating password');\r\n      }\r\n    } catch (error) {\r\n      toast.error('Error updating password');\r\n    }\r\n  };\r\n  \r\n\r\n  const passwordStrength = zxcvbn(password).score;\r\n\r\n  return (\r\n    <div className=\"max-w-md mx-auto mt-8 p-6 bg-white rounded-lg shadow-md\">\r\n      <h2 className=\"text-2xl font-bold mb-6\">Reset Password</h2>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"otp\" className=\"block font-bold mb-1\">\r\n            OTP\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"otp\"\r\n            name=\"otp\"\r\n            className=\"border border-gray-300 px-3 py-2 rounded-md w-full\"\r\n            value={otp}\r\n            onChange={handleOtpChange}\r\n          />\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"password\" className=\"block font-bold mb-1\">\r\n            New Password\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            className=\"border border-gray-300 px-3 py-2 rounded-md w-full\"\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n          />\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"confirmPassword\" className=\"block font-bold mb-1\">\r\n            Confirm Password\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"confirmPassword\"\r\n            name=\"confirmPassword\"\r\n            className=\"border border-gray-300 px-3 py-2 rounded-md w-full\"\r\n            value={confirmPassword}\r\n            onChange={handleConfirmPasswordChange}\r\n          />\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <div className=\"flex items-center mb-1\">\r\n            <span\r\n              className={`w-4 h-1 mr-2 bg-${password.length === 0\r\n                ? 'gray-300'\r\n                : passwordStrength === 4\r\n                  ? 'green-500'\r\n                  : passwordStrength >= 3\r\n                    ? 'yellow-500'\r\n                    : passwordStrength >= 2\r\n                      ? 'blue-500'\r\n                      : 'red-500'\r\n                }`}\r\n            />\r\n            <span className=\"text-sm\">\r\n              {password.length === 0\r\n                ? 'Password Strength'\r\n                : passwordStrength === 4\r\n                  ? 'Strong'\r\n                  : passwordStrength >= 3\r\n                    ? 'Medium'\r\n                    : passwordStrength >= 2\r\n                      ? 'Fair'\r\n                      : 'Weak'}\r\n            </span>\r\n          </div>\r\n          <div className=\"w-full h-2 bg-gray-300 rounded-full\">\r\n            <div\r\n              className={`h-full ${password.length === 0\r\n                ? 'w-0 bg-gray-300'\r\n                : passwordStrength === 4\r\n                  ? 'w-full bg-green-500'\r\n                  : passwordStrength >= 3\r\n                    ? 'w-3/4 bg-yellow-500'\r\n                    : passwordStrength >= 2\r\n                      ? 'w-1/2 bg-blue-500'\r\n                      : 'w-1/4 bg-red-500'\r\n                }`}\r\n            />\r\n          </div>\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600 transition-colors\"\r\n        >\r\n          Reset Password\r\n        </button>\r\n      </form>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasswordResetForm;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Link} from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport { getAllUsers } from \"../../action/userAction\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { FiAlertCircle, FiArrowLeft, FiLoader } from 'react-icons/fi'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport axios from 'axios';\r\nimport ResetPassword from '../Users/ResetPassword'\r\n\r\n\r\nconst ForgotPassword = () => {\r\n    const emailref = useRef();\r\n    const { isAuthenticated } = useAuth0();\r\n    const [email, setEmail] = useState('');\r\n    const [otpform, ShowResetform] = useState(true);\r\n    const [loading, SetLoading] = useState(false);\r\n\r\n    const currentUserState = useSelector((state) => state.loginUserReducer);\r\n    const allUsersState = useSelector((state) => state.getAllUsersReducer);\r\n    const { currentUser } = currentUserState;\r\n    const { users } = allUsersState;\r\n    const isEmailRegistered = users.find((user) => user.email === email);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllUsers());\r\n    }, [dispatch]);\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        SetLoading(true);\r\n        const apiUrl = process.env.NODE_ENV === 'production' ? 'https://pizzaking.cyclic.app/api/users/forgotpassword' : 'http://localhost:8080/api/users/forgotpassword'\r\n        e.preventDefault();\r\n\r\n        axios\r\n            .post(apiUrl, {\r\n                email: email,\r\n            })\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                if (res.data.statusText === \"success\") {\r\n                    SetLoading(false);\r\n                    toast.success(`An OTP is sent to your email ${email}`);\r\n\r\n                    setTimeout(() => {\r\n                        ShowResetform(false);\r\n                    }, 1500); // Delay 1.5 seconds\r\n                } else {\r\n                    SetLoading(false);\r\n                    alert(res.data.message);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                SetLoading(false);\r\n                console.log(err);\r\n            });\r\n            \r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>Forgot Password</title>\r\n            </Helmet>\r\n\r\n            {\r\n                !isAuthenticated && !currentUser ? <div><div className=\"flex justify-center items-center min-h-screen bg-gray-100\">\r\n                    <div className=\"w-full max-w-md\">\r\n                        {\r\n                            otpform ? <div> <form\r\n                                className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\"\r\n                                onSubmit={handleSubmit}\r\n                            >\r\n                                <div className=\"mb-6\">\r\n                                    <label\r\n                                        className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n                                        htmlFor=\"email\"\r\n                                    >\r\n                                        Email Address\r\n                                    </label>\r\n                                    <input\r\n                                        required\r\n                                        className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                        id=\"email\"\r\n                                        type=\"email\"\r\n                                        placeholder=\"Enter your email address\"\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                        ref={emailref}\r\n                                    />\r\n                                    {isEmailRegistered ? (\r\n                                        <p className=\"text-green-500 text-xs mt-1\">\r\n                                            Email address is registered with us.\r\n                                        </p>\r\n                                    ) : (\r\n                                        <p className=\"text-red-500 text-xs mt-1\">\r\n                                            Email not registered.\r\n                                        </p>\r\n                                    )}\r\n\r\n                                    <p className=\"mb-3 mt-3 text-center\">\r\n                                        We will send an OTP to your registered email.\r\n                                    </p>\r\n                                </div>\r\n\r\n                                <div className=\"flex items-center justify-center\">\r\n                                    {loading ? (\r\n                                        <div className=\"flex items-center justify-center mb-6\">\r\n                                        <FiLoader className=\"animate-spin text-2xl mr-2\" />\r\n                                        Sending OTP...\r\n                                      </div>\r\n                                      \r\n                                    ) : (\r\n                                        <button\r\n                                            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\r\n                                            type=\"submit\"\r\n                                        >\r\n                                            Send OTP\r\n                                        </button>\r\n                                    )}\r\n                                    <Link\r\n                                        to=\"/login\"\r\n                                        className=\"bg-red-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline mt-2 sm:mt-0 ml-2 sm:ml-4\"\r\n                                    >\r\n                                        Back\r\n                                    </Link>\r\n                                </div>\r\n                            </form></div> : <div> <ResetPassword email={emailref.current.value} /> </div>\r\n                        }\r\n                        <p className=\"text-center text-gray-500 text-xs\">\r\n                            &copy; 2023 PizzaKing. All rights reserved.\r\n                        </p>\r\n                    </div>\r\n                </div></div>\r\n\r\n                    : <>\r\n\r\n                        <div className=\"flex justify-center items-center min-h-screen bg-gray-100\">\r\n                            <div className=\"w-full max-w-md\">\r\n                                <div className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\">\r\n                                    <div className=\"flex items-center justify-center mb-6\">\r\n                                        <FiAlertCircle className=\"text-red-500 text-6xl mr-2\" />\r\n                                        <p className=\"text-red-500 text-lg font-semibold\">\r\n                                            You are already logged in with your credentials.\r\n                                        </p>\r\n                                    </div>\r\n                                    <Link\r\n                                        to=\"/user\"\r\n                                        className=\"bg-red-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline mt-4 block w-full text-center\"\r\n                                    >\r\n                                        <FiArrowLeft className=\"mr-2\" />\r\n                                        Back\r\n                                    </Link>\r\n                                </div>\r\n                                <p className=\"text-center text-gray-500 text-xs\">\r\n                                    &copy; 2023 PizzaKing. All rights reserved.\r\n                                </p>\r\n                            </div>\r\n                        </div> </>\r\n            }\r\n            <ToastContainer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ForgotPassword;\r\n"],"names":["registerUser","user","dispatch","type","axios","response","data","payload","logoutUser","localStorage","removeItem","window","location","href","getAllUsers","deleteUser","userid","swal","reload","props","useState","password","setPassword","confirmPassword","setConfirmPassword","otp","setOtp","Navigate","useNavigate","handleFormSubmit","e","apiUrl","preventDefault","toast","formData","email","otpCode","headers","statusText","setTimeout","passwordStrength","zxcvbn","score","className","onSubmit","htmlFor","id","name","value","onChange","target","length","emailref","useRef","isAuthenticated","useAuth0","setEmail","otpform","ShowResetform","loading","SetLoading","currentUserState","useSelector","state","loginUserReducer","allUsersState","getAllUsersReducer","currentUser","isEmailRegistered","users","find","useDispatch","useEffect","Helmet","to","then","res","console","log","alert","message","catch","err","required","placeholder","ref","ResetPassword","current"],"sourceRoot":""}