{"version":3,"file":"static/js/3216.506eb451.chunk.js","mappings":"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","sources":["action/orderAction.js","components/Users/UserOrders.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const placeOrder = (token, subTotal) => async (dispatch, getState) => {\r\n  dispatch({ type: \"PLACE_ORDER_REQUEST\" });\r\n  const currentUser = getState().loginUserReducer.currentUser;\r\n  const cartItems = getState().cartReducer.cartItems;\r\n  try {\r\n    await axios.post(\"/api/orders/placeorder\", {\r\n      token,\r\n      subTotal,\r\n      currentUser,\r\n      cartItems,\r\n    });\r\n    dispatch({ type: \"PLACE_ORDER_SUCCESS\" });\r\n    // console.log(res);\r\n  } catch (error) {\r\n    dispatch({ type: \"PLACE_ORDER_FAIL\" });\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getUserOrders = () => async (dispatch, getState) => {\r\n  const currentUser = getState().loginUserReducer.currentUser;\r\n  dispatch({\r\n    type: \"USER_ORDER_REQUEST\",\r\n  });\r\n  try {\r\n    const response = await axios.post(\"/api/orders/getuserorder\", {\r\n      email: currentUser.email,\r\n    });\r\n    // console.log(response);\r\n    dispatch({ type: \"USER_ORDER_SUCCESS\", payload: response.data });\r\n  } catch (error) {\r\n    dispatch({ type: \"USER_ORDER_FAIL\", payload: error });\r\n  }\r\n};\r\nexport const getAllOrders = () => async (dispatch, getState) => {\r\n  // const currentUser = getState().loginUserReducer.currentUser;\r\n  dispatch({\r\n    type: \"ALL_ORDER_REQUEST\",\r\n  });\r\n  try {\r\n    const response = await axios.get(\"/api/orders/alluserorder\");\r\n    dispatch({ type: \"ALL_ORDER_SUCCESS\", payload: response.data });\r\n  } catch (error) {\r\n    dispatch({ type: \"ALL_ORDER_FAIL\", payload: error });\r\n  }\r\n};\r\n\r\nexport const deliverOrder = (orderid) => async (dispatch, getState) => {\r\n  // const currentUser = getState().loginUserReducer.currentUser;\r\n  dispatch({\r\n    type: \"GET_ALL_ORDER_REQUEST\",\r\n  });\r\n  try {\r\n    await axios.post(\"/api/orders/deliverorder\", { orderid });\r\n    // alert(\"Deliverd Success\");\r\n    const orders = await axios.get(\"/api/orders/alluserorder\");\r\n    dispatch({ type: \"GET_ALL_ORDER_SUCCESS\", payload: orders.data });\r\n    window.location.href = \"/admin/orderlist\";\r\n  } catch (error) {\r\n    dispatch({ type: \"GET_ALL_ORDER_FAIL\", payload: error });\r\n  }\r\n};\r\n\r\n\r\nexport const cancelOrder = (orderid) => async (dispatch, getState) => {\r\n  // const currentUser = getState().loginUserReducer.currentUser;\r\n  dispatch({\r\n    type: \"GET_ALL_ORDER_REQUEST\",\r\n  });\r\n  try {\r\n    await axios.post(\"/api/orders/canceOrder\", { orderid });\r\n    // alert(\"Deliverd Success\");\r\n    const orders = await axios.get(\"/api/orders/alluserorder\");\r\n    dispatch({ type: \"GET_ALL_ORDER_SUCCESS\", payload: orders.data });\r\n    window.location.href = \"/admin/orderlist\";\r\n  } catch (error) {\r\n    dispatch({ type: \"GET_ALL_ORDER_FAIL\", payload: error });\r\n  }\r\n};\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { FaCheckCircle, FaTimesCircle, FaCircleNotch } from 'react-icons/fa';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getUserOrders } from '../../action/orderAction';\r\n\r\n\r\nconst OrderDetailsPage = () => {\r\n  const orderState = useSelector((state) => state.getUserOrdersReducer);\r\n  const { loading, error, orders } = orderState;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserOrders());\r\n  }, [dispatch]);\r\n\r\n  const getStatusIcon = (isDelivered, isCanceled, isProcessing) => {\r\n    if (isCanceled) {\r\n      return (\r\n        <div className=\"flex items-center\">\r\n          <div className=\"flex items-center text-red-500\">\r\n            <div className=\"w-6 h-6 mr-2\">\r\n              <FaTimesCircle className=\"w-full h-full\" />\r\n            </div>\r\n            <span className=\"font-bold\">Cancelled</span>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (isDelivered) {\r\n      return (\r\n        <div className=\"flex items-center\">\r\n          <div className=\"flex items-center text-green-500\">\r\n            <div className=\"w-6 h-6 mr-2\">\r\n              <FaCheckCircle className=\"w-full h-full\" />\r\n            </div>\r\n            <span className=\"font-bold\">Delivered</span>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (isProcessing) {\r\n      return (\r\n        <div className=\"flex items-center\">\r\n          <div className=\"flex items-center text-yellow-500\">\r\n            <div className=\"w-6 h-6 mr-2\">\r\n              <FaCircleNotch className=\"w-full h-full animate-spin\" />\r\n            </div>\r\n            <span className=\"font-bold\">Processing</span>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    const formattedDate = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\r\n    return formattedDate;\r\n  };\r\n  if (orders.length === 0) {\r\n    return (\r\n      <div className=\"bg-gray-100 min-h-screen flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <h1 className=\"text-3xl font-bold mb-6\">Order Details</h1>\r\n          <div className=\"text-red-500 text-xl mb-4\">You don't have any orders.</div>\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"bg-gray-100 min-h-screen flex items-center justify-center\">\r\n      \r\n      <div className=\"max-w-4xl w-full mx-auto bg-white rounded-md shadow-md p-6\">\r\n        <h1 className=\"text-3xl font-bold mb-6\">Order Details</h1>\r\n        {loading ? (\r\n          <p>Loading...</p>\r\n        ) : error ? (\r\n          <p>Error: {error}</p>\r\n        ) : (\r\n          orders.map((order) => (\r\n            <div key={order._id.$oid} className=\"mb-8\">\r\n              <h2 className=\"text-xl font-bold\">Order ID: {order._id.$oid}</h2>\r\n              <div className=\"flex items-center\">\r\n                <span className=\"mr-2\">Status:</span>\r\n                {getStatusIcon(order.isDelivered, order.isCanceled)}\r\n              </div>\r\n              <p className=\"text-gray-500\">Order Date: {formatDate(order.createdAt)}</p>\r\n\r\n              <h3 className=\"text-lg font-bold mt-4\">Order Items</h3>\r\n              {order.orderItems.map((item) => (\r\n                <div key={item._id} className=\"flex items-center justify-start mb-2\">\r\n                  <img src={item.image} alt={item.name} className=\"w-10 h-10 rounded-md object-cover mr-4\" />\r\n                  <div>\r\n                    <h4 className=\"text-md font-bold\">{item.name}</h4>\r\n                    <p>{item.variant}</p>\r\n                    <p>Quantity: {item.quantity}</p>\r\n                    <p>Price: Rs {item.price}</p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n\r\n              <div className=\"flex justify-between items-center mt-4\">\r\n                <p className=\"text-md font-bold\">Total:</p>\r\n                <p className=\"text-md\">${order.orderAmount}</p>\r\n              </div>\r\n\r\n              <h3 className=\"text-lg font-bold mt-6\">Shipping Address</h3>\r\n              <p>{order.shippingAddress.street}</p>\r\n              <p>\r\n                {order.shippingAddress.city}, {order.shippingAddress.country}, {order.shippingAddress.postal_code}\r\n              </p>\r\n              <hr className=\"my-6 border-gray-900 w-30\" />\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderDetailsPage;\r\n"],"names":["getUserOrders","dispatch","getState","currentUser","loginUserReducer","type","axios","email","response","payload","data","getAllOrders","deliverOrder","orderid","orders","window","location","href","cancelOrder","orderState","useSelector","state","getUserOrdersReducer","loading","error","useDispatch","useEffect","formatDate","dateString","date","Date","getDate","getMonth","getFullYear","length","className","map","order","_id","$oid","isDelivered","isCanceled","isProcessing","createdAt","orderItems","item","src","image","alt","name","variant","quantity","price","orderAmount","shippingAddress","street","city","country","postal_code"],"sourceRoot":""}